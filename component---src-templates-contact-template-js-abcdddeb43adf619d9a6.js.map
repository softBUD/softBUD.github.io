{"version":3,"file":"component---src-templates-contact-template-js-abcdddeb43adf619d9a6.js","mappings":"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","sources":["webpack://gatsby-starter-glass/./node_modules/react-hook-form/dist/index.esm.mjs","webpack://gatsby-starter-glass/./node_modules/react-google-recaptcha/lib/esm/recaptcha.js","webpack://gatsby-starter-glass/./node_modules/react-async-script/lib/esm/async-script-loader.js","webpack://gatsby-starter-glass/./node_modules/react-google-recaptcha/lib/esm/recaptcha-wrapper.js","webpack://gatsby-starter-glass/./node_modules/react-netlify-forms/dist/index.modern.js","webpack://gatsby-starter-glass/./src/templates/contact-template.js"],"sourcesContent":["import React from 'react';\nvar isCheckBoxInput = element => element.type === 'checkbox';\nvar isDateObject = value => value instanceof Date;\nvar isNullOrUndefined = value => value == null;\nconst isObjectType = value => typeof value === 'object';\nvar isObject = value => !isNullOrUndefined(value) && !Array.isArray(value) && isObjectType(value) && !isDateObject(value);\nvar getEventValue = event => isObject(event) && event.target ? isCheckBoxInput(event.target) ? event.target.checked : event.target.value : event;\nvar getNodeParentName = name => name.substring(0, name.search(/\\.\\d+(\\.|$)/)) || name;\nvar isNameInFieldArray = (names, name) => names.has(getNodeParentName(name));\nvar isPlainObject = tempObject => {\n  const prototypeCopy = tempObject.constructor && tempObject.constructor.prototype;\n  return isObject(prototypeCopy) && prototypeCopy.hasOwnProperty('isPrototypeOf');\n};\nvar isWeb = typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined' && typeof document !== 'undefined';\nfunction cloneObject(data) {\n  let copy;\n  const isArray = Array.isArray(data);\n  if (data instanceof Date) {\n    copy = new Date(data);\n  } else if (data instanceof Set) {\n    copy = new Set(data);\n  } else if (!(isWeb && (data instanceof Blob || data instanceof FileList)) && (isArray || isObject(data))) {\n    copy = isArray ? [] : {};\n    if (!isArray && !isPlainObject(data)) {\n      copy = data;\n    } else {\n      for (const key in data) {\n        if (data.hasOwnProperty(key)) {\n          copy[key] = cloneObject(data[key]);\n        }\n      }\n    }\n  } else {\n    return data;\n  }\n  return copy;\n}\nvar compact = value => Array.isArray(value) ? value.filter(Boolean) : [];\nvar isUndefined = val => val === undefined;\nvar get = (obj, path, defaultValue) => {\n  if (!path || !isObject(obj)) {\n    return defaultValue;\n  }\n  const result = compact(path.split(/[,[\\].]+?/)).reduce((result, key) => isNullOrUndefined(result) ? result : result[key], obj);\n  return isUndefined(result) || result === obj ? isUndefined(obj[path]) ? defaultValue : obj[path] : result;\n};\nconst EVENTS = {\n  BLUR: 'blur',\n  FOCUS_OUT: 'focusout',\n  CHANGE: 'change'\n};\nconst VALIDATION_MODE = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all'\n};\nconst INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate'\n};\nconst HookFormContext = React.createContext(null);\n/**\n * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @returns return all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nconst useFormContext = () => React.useContext(HookFormContext);\n/**\n * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @param props - all useFrom methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nconst FormProvider = props => {\n  const {\n    children,\n    ...data\n  } = props;\n  return React.createElement(HookFormContext.Provider, {\n    value: data\n  }, children);\n};\nvar getProxyFormState = function (formState, control, localProxyFormState) {\n  let isRoot = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  const result = {\n    defaultValues: control._defaultValues\n  };\n  for (const key in formState) {\n    Object.defineProperty(result, key, {\n      get: () => {\n        const _key = key;\n        if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {\n          control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\n        }\n        localProxyFormState && (localProxyFormState[_key] = true);\n        return formState[_key];\n      }\n    });\n  }\n  return result;\n};\nvar isEmptyObject = value => isObject(value) && !Object.keys(value).length;\nvar shouldRenderFormState = (formStateData, _proxyFormState, updateFormState, isRoot) => {\n  updateFormState(formStateData);\n  const {\n    name,\n    ...formState\n  } = formStateData;\n  return isEmptyObject(formState) || Object.keys(formState).length >= Object.keys(_proxyFormState).length || Object.keys(formState).find(key => _proxyFormState[key] === (!isRoot || VALIDATION_MODE.all));\n};\nvar convertToArrayPayload = value => Array.isArray(value) ? value : [value];\nvar shouldSubscribeByName = (name, signalName, exact) => exact && signalName ? name === signalName : !name || !signalName || name === signalName || convertToArrayPayload(name).some(currentName => currentName && (currentName.startsWith(signalName) || signalName.startsWith(currentName)));\nfunction useSubscribe(props) {\n  const _props = React.useRef(props);\n  _props.current = props;\n  React.useEffect(() => {\n    const subscription = !props.disabled && _props.current.subject && _props.current.subject.subscribe({\n      next: _props.current.next\n    });\n    return () => {\n      subscription && subscription.unsubscribe();\n    };\n  }, [props.disabled]);\n}\n\n/**\n * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformstate) • [Demo](https://codesandbox.io/s/useformstate-75xly)\n *\n * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, control } = useForm({\n *     defaultValues: {\n *     firstName: \"firstName\"\n *   }});\n *   const { dirtyFields } = useFormState({\n *     control\n *   });\n *   const onSubmit = (data) => console.log(data);\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input {...register(\"firstName\")} placeholder=\"First Name\" />\n *       {dirtyFields.firstName && <p>Field is dirty.</p>}\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFormState(props) {\n  const methods = useFormContext();\n  const {\n    control = methods.control,\n    disabled,\n    name,\n    exact\n  } = props || {};\n  const [formState, updateFormState] = React.useState(control._formState);\n  const _mounted = React.useRef(true);\n  const _localProxyFormState = React.useRef({\n    isDirty: false,\n    isLoading: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false\n  });\n  const _name = React.useRef(name);\n  _name.current = name;\n  useSubscribe({\n    disabled,\n    next: value => _mounted.current && shouldSubscribeByName(_name.current, value.name, exact) && shouldRenderFormState(value, _localProxyFormState.current, control._updateFormState) && updateFormState({\n      ...control._formState,\n      ...value\n    }),\n    subject: control._subjects.state\n  });\n  React.useEffect(() => {\n    _mounted.current = true;\n    _localProxyFormState.current.isValid && control._updateValid(true);\n    return () => {\n      _mounted.current = false;\n    };\n  }, [control]);\n  return getProxyFormState(formState, control, _localProxyFormState.current, false);\n}\nvar isString = value => typeof value === 'string';\nvar generateWatchOutput = (names, _names, formValues, isGlobal, defaultValue) => {\n  if (isString(names)) {\n    isGlobal && _names.watch.add(names);\n    return get(formValues, names, defaultValue);\n  }\n  if (Array.isArray(names)) {\n    return names.map(fieldName => (isGlobal && _names.watch.add(fieldName), get(formValues, fieldName)));\n  }\n  isGlobal && (_names.watchAll = true);\n  return formValues;\n};\n\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/docs/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * const { watch } = useForm();\n * const values = useWatch({\n *   name: \"fieldName\"\n *   control,\n * })\n * ```\n */\nfunction useWatch(props) {\n  const methods = useFormContext();\n  const {\n    control = methods.control,\n    name,\n    defaultValue,\n    disabled,\n    exact\n  } = props || {};\n  const _name = React.useRef(name);\n  _name.current = name;\n  useSubscribe({\n    disabled,\n    subject: control._subjects.values,\n    next: formState => {\n      if (shouldSubscribeByName(_name.current, formState.name, exact)) {\n        updateValue(cloneObject(generateWatchOutput(_name.current, control._names, formState.values || control._formValues, false, defaultValue)));\n      }\n    }\n  });\n  const [value, updateValue] = React.useState(control._getWatch(name, defaultValue));\n  React.useEffect(() => control._removeUnmounted());\n  return value;\n}\nvar isKey = value => /^\\w*$/.test(value);\nvar stringToPath = input => compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\nfunction set(object, path, value) {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue = value;\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue = isObject(objValue) || Array.isArray(objValue) ? objValue : !isNaN(+tempPath[index + 1]) ? [] : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\n\n/**\n * Custom hook to work with controlled component, this function provide you with both form and field level state. Re-render is isolated at the hook level.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usecontroller) • [Demo](https://codesandbox.io/s/usecontroller-0o8px)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns field properties, field and form state. {@link UseControllerReturn}\n *\n * @example\n * ```tsx\n * function Input(props) {\n *   const { field, fieldState, formState } = useController(props);\n *   return (\n *     <div>\n *       <input {...field} placeholder={props.name} />\n *       <p>{fieldState.isTouched && \"Touched\"}</p>\n *       <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *     </div>\n *   );\n * }\n * ```\n */\nfunction useController(props) {\n  const methods = useFormContext();\n  const {\n    name,\n    control = methods.control,\n    shouldUnregister\n  } = props;\n  const isArrayField = isNameInFieldArray(control._names.array, name);\n  const value = useWatch({\n    control,\n    name,\n    defaultValue: get(control._formValues, name, get(control._defaultValues, name, props.defaultValue)),\n    exact: true\n  });\n  const formState = useFormState({\n    control,\n    name\n  });\n  const _registerProps = React.useRef(control.register(name, {\n    ...props.rules,\n    value\n  }));\n  _registerProps.current = control.register(name, props.rules);\n  React.useEffect(() => {\n    const _shouldUnregisterField = control._options.shouldUnregister || shouldUnregister;\n    const updateMounted = (name, value) => {\n      const field = get(control._fields, name);\n      if (field) {\n        field._f.mount = value;\n      }\n    };\n    updateMounted(name, true);\n    if (_shouldUnregisterField) {\n      const value = cloneObject(get(control._options.defaultValues, name));\n      set(control._defaultValues, name, value);\n      if (isUndefined(get(control._formValues, name))) {\n        set(control._formValues, name, value);\n      }\n    }\n    return () => {\n      (isArrayField ? _shouldUnregisterField && !control._state.action : _shouldUnregisterField) ? control.unregister(name) : updateMounted(name, false);\n    };\n  }, [name, control, isArrayField, shouldUnregister]);\n  return {\n    field: {\n      name,\n      value,\n      onChange: React.useCallback(event => _registerProps.current.onChange({\n        target: {\n          value: getEventValue(event),\n          name: name\n        },\n        type: EVENTS.CHANGE\n      }), [name]),\n      onBlur: React.useCallback(() => _registerProps.current.onBlur({\n        target: {\n          value: get(control._formValues, name),\n          name: name\n        },\n        type: EVENTS.BLUR\n      }), [name, control]),\n      ref: elm => {\n        const field = get(control._fields, name);\n        if (field && elm) {\n          field._f.ref = {\n            focus: () => elm.focus(),\n            select: () => elm.select(),\n            setCustomValidity: message => elm.setCustomValidity(message),\n            reportValidity: () => elm.reportValidity()\n          };\n        }\n      }\n    },\n    formState,\n    fieldState: Object.defineProperties({}, {\n      invalid: {\n        enumerable: true,\n        get: () => !!get(formState.errors, name)\n      },\n      isDirty: {\n        enumerable: true,\n        get: () => !!get(formState.dirtyFields, name)\n      },\n      isTouched: {\n        enumerable: true,\n        get: () => !!get(formState.touchedFields, name)\n      },\n      error: {\n        enumerable: true,\n        get: () => get(formState.errors, name)\n      }\n    })\n  };\n}\n\n/**\n * Component based on `useController` hook to work with controlled component.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usecontroller/controller) • [Demo](https://codesandbox.io/s/react-hook-form-v6-controller-ts-jwyzw) • [Video](https://www.youtube.com/watch?v=N2UNk_UCVyA)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns provide field handler functions, field and form state.\n *\n * @example\n * ```tsx\n * function App() {\n *   const { control } = useForm<FormValues>({\n *     defaultValues: {\n *       test: \"\"\n *     }\n *   });\n *\n *   return (\n *     <form>\n *       <Controller\n *         control={control}\n *         name=\"test\"\n *         render={({ field: { onChange, onBlur, value, ref }, formState, fieldState }) => (\n *           <>\n *             <input\n *               onChange={onChange} // send value to hook form\n *               onBlur={onBlur} // notify when input is touched\n *               value={value} // return updated value\n *               ref={ref} // set ref for focus management\n *             />\n *             <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *             <p>{fieldState.isTouched ? \"touched\" : \"\"}</p>\n *           </>\n *         )}\n *       />\n *     </form>\n *   );\n * }\n * ```\n */\nconst Controller = props => props.render(useController(props));\nconst POST_REQUEST = 'post';\n/**\n * Form component to manage submission.\n *\n * @param props - to setup submission detail. {@link FormProps}\n *\n * @returns form component or headless render prop.\n *\n * @example\n * ```tsx\n * function App() {\n *   const { control, formState: { errors } } = useForm();\n *\n *   return (\n *     <Form action=\"/api\" control={control}>\n *       <input {...register(\"name\")} />\n *       <p>{errors?.root?.server && 'Server error'}</p>\n *       <button>Submit</button>\n *     </Form>\n *   );\n * }\n * ```\n */\nfunction Form(props) {\n  const methods = useFormContext();\n  const [mounted, setMounted] = React.useState(false);\n  const {\n    control = methods.control,\n    onSubmit,\n    children,\n    action,\n    method = POST_REQUEST,\n    headers,\n    encType,\n    onError,\n    render,\n    onSuccess,\n    validateStatus,\n    ...rest\n  } = props;\n  const submit = async event => {\n    let hasError = false;\n    let type = '';\n    await control.handleSubmit(async data => {\n      const formData = new FormData();\n      let formDataJson = '';\n      try {\n        formDataJson = JSON.stringify(data);\n      } catch (_a) {}\n      for (const name of control._names.mount) {\n        formData.append(name, get(data, name));\n      }\n      if (onSubmit) {\n        onSubmit({\n          data,\n          event,\n          method,\n          formData,\n          formDataJson\n        });\n      }\n      if (action) {\n        try {\n          const shouldStringifySubmissionData = [headers && headers['Content-Type'], encType].some(value => value && value.includes('json'));\n          const response = await fetch(action, {\n            method,\n            headers: {\n              ...headers,\n              ...(encType ? {\n                'Content-Type': encType\n              } : {})\n            },\n            body: shouldStringifySubmissionData ? formDataJson : formData\n          });\n          if (response && (validateStatus ? !validateStatus(response.status) : response.status < 200 || response.status >= 300)) {\n            hasError = true;\n            onError && onError({\n              response\n            });\n            type = String(response.status);\n          } else {\n            onSuccess && onSuccess({\n              response\n            });\n          }\n        } catch (error) {\n          hasError = true;\n          onError && onError({\n            error\n          });\n        }\n      }\n    })(event);\n    if (hasError && props.control) {\n      props.control._subjects.state.next({\n        isSubmitSuccessful: false\n      });\n      props.control.setError('root.server', {\n        type\n      });\n    }\n  };\n  React.useEffect(() => {\n    setMounted(true);\n  }, []);\n  return render ? React.createElement(React.Fragment, null, render({\n    submit\n  })) : React.createElement(\"form\", {\n    noValidate: mounted,\n    action: action,\n    method: method,\n    encType: encType,\n    onSubmit: submit,\n    ...rest\n  }, children);\n}\nvar appendErrors = (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria ? {\n  ...errors[name],\n  types: {\n    ...(errors[name] && errors[name].types ? errors[name].types : {}),\n    [type]: message || true\n  }\n} : {};\nconst focusFieldBy = (fields, callback, fieldsNames) => {\n  for (const key of fieldsNames || Object.keys(fields)) {\n    const field = get(fields, key);\n    if (field) {\n      const {\n        _f,\n        ...currentField\n      } = field;\n      if (_f && callback(_f.name)) {\n        if (_f.ref.focus) {\n          _f.ref.focus();\n          break;\n        } else if (_f.refs && _f.refs[0].focus) {\n          _f.refs[0].focus();\n          break;\n        }\n      } else if (isObject(currentField)) {\n        focusFieldBy(currentField, callback);\n      }\n    }\n  }\n};\nvar generateId = () => {\n  const d = typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (Math.random() * 16 + d) % 16 | 0;\n    return (c == 'x' ? r : r & 0x3 | 0x8).toString(16);\n  });\n};\nvar getFocusFieldName = function (name, index) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return options.shouldFocus || isUndefined(options.shouldFocus) ? options.focusName || \"\".concat(name, \".\").concat(isUndefined(options.focusIndex) ? index : options.focusIndex, \".\") : '';\n};\nvar getValidationModes = mode => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n  isOnTouch: mode === VALIDATION_MODE.onTouched\n});\nvar isWatched = (name, _names, isBlurEvent) => !isBlurEvent && (_names.watchAll || _names.watch.has(name) || [..._names.watch].some(watchName => name.startsWith(watchName) && /^\\.\\w+/.test(name.slice(watchName.length))));\nvar updateFieldArrayRootError = (errors, error, name) => {\n  const fieldArrayErrors = compact(get(errors, name));\n  set(fieldArrayErrors, 'root', error[name]);\n  set(errors, name, fieldArrayErrors);\n  return errors;\n};\nvar isBoolean = value => typeof value === 'boolean';\nvar isFileInput = element => element.type === 'file';\nvar isFunction = value => typeof value === 'function';\nvar isHTMLElement = value => {\n  if (!isWeb) {\n    return false;\n  }\n  const owner = value ? value.ownerDocument : 0;\n  return value instanceof (owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement);\n};\nvar isMessage = value => isString(value);\nvar isRadioInput = element => element.type === 'radio';\nvar isRegex = value => value instanceof RegExp;\nconst defaultResult = {\n  value: false,\n  isValid: false\n};\nconst validResult = {\n  value: true,\n  isValid: true\n};\nvar getCheckboxValue = options => {\n  if (Array.isArray(options)) {\n    if (options.length > 1) {\n      const values = options.filter(option => option && option.checked && !option.disabled).map(option => option.value);\n      return {\n        value: values,\n        isValid: !!values.length\n      };\n    }\n    return options[0].checked && !options[0].disabled ?\n    // @ts-expect-error expected to work in the browser\n    options[0].attributes && !isUndefined(options[0].attributes.value) ? isUndefined(options[0].value) || options[0].value === '' ? validResult : {\n      value: options[0].value,\n      isValid: true\n    } : validResult : defaultResult;\n  }\n  return defaultResult;\n};\nconst defaultReturn = {\n  isValid: false,\n  value: null\n};\nvar getRadioValue = options => Array.isArray(options) ? options.reduce((previous, option) => option && option.checked && !option.disabled ? {\n  isValid: true,\n  value: option.value\n} : previous, defaultReturn) : defaultReturn;\nfunction getValidateError(result, ref) {\n  let type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'validate';\n  if (isMessage(result) || Array.isArray(result) && result.every(isMessage) || isBoolean(result) && !result) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref\n    };\n  }\n}\nvar getValueAndMessage = validationData => isObject(validationData) && !isRegex(validationData) ? validationData : {\n  value: validationData,\n  message: ''\n};\nvar validateField = async (field, formValues, validateAllFieldCriteria, shouldUseNativeValidation, isFieldArray) => {\n  const {\n    ref,\n    refs,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate,\n    name,\n    valueAsNumber,\n    mount,\n    disabled\n  } = field._f;\n  const inputValue = get(formValues, name);\n  if (!mount || disabled) {\n    return {};\n  }\n  const inputRef = refs ? refs[0] : ref;\n  const setCustomValidity = message => {\n    if (shouldUseNativeValidation && inputRef.reportValidity) {\n      inputRef.setCustomValidity(isBoolean(message) ? '' : message || '');\n      inputRef.reportValidity();\n    }\n  };\n  const error = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty = (valueAsNumber || isFileInput(ref)) && isUndefined(ref.value) && isUndefined(inputValue) || isHTMLElement(ref) && ref.value === '' || inputValue === '' || Array.isArray(inputValue) && !inputValue.length;\n  const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\n  const getMinMaxMessage = function (exceedMax, maxLengthMessage, minLengthMessage) {\n    let maxType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : INPUT_VALIDATION_RULES.maxLength;\n    let minType = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : INPUT_VALIDATION_RULES.minLength;\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...appendErrorsCurry(exceedMax ? maxType : minType, message)\n    };\n  };\n  if (isFieldArray ? !Array.isArray(inputValue) || !inputValue.length : required && (!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue)) || isBoolean(inputValue) && !inputValue || isCheckBox && !getCheckboxValue(refs).isValid || isRadio && !getRadioValue(refs).isValid)) {\n    const {\n      value,\n      message\n    } = isMessage(required) ? {\n      value: !!required,\n      message: required\n    } : getValueAndMessage(required);\n    if (value) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message,\n        ref: inputRef,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message)\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n  if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n    let exceedMax;\n    let exceedMin;\n    const maxOutput = getValueAndMessage(max);\n    const minOutput = getValueAndMessage(min);\n    if (!isNullOrUndefined(inputValue) && !isNaN(inputValue)) {\n      const valueNumber = ref.valueAsNumber || (inputValue ? +inputValue : inputValue);\n      if (!isNullOrUndefined(maxOutput.value)) {\n        exceedMax = valueNumber > maxOutput.value;\n      }\n      if (!isNullOrUndefined(minOutput.value)) {\n        exceedMin = valueNumber < minOutput.value;\n      }\n    } else {\n      const valueDate = ref.valueAsDate || new Date(inputValue);\n      const convertTimeToDate = time => new Date(new Date().toDateString() + ' ' + time);\n      const isTime = ref.type == 'time';\n      const isWeek = ref.type == 'week';\n      if (isString(maxOutput.value) && inputValue) {\n        exceedMax = isTime ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value) : isWeek ? inputValue > maxOutput.value : valueDate > new Date(maxOutput.value);\n      }\n      if (isString(minOutput.value) && inputValue) {\n        exceedMin = isTime ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value) : isWeek ? inputValue < minOutput.value : valueDate < new Date(minOutput.value);\n      }\n    }\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name].message);\n        return error;\n      }\n    }\n  }\n  if ((maxLength || minLength) && !isEmpty && (isString(inputValue) || isFieldArray && Array.isArray(inputValue))) {\n    const maxLengthOutput = getValueAndMessage(maxLength);\n    const minLengthOutput = getValueAndMessage(minLength);\n    const exceedMax = !isNullOrUndefined(maxLengthOutput.value) && inputValue.length > +maxLengthOutput.value;\n    const exceedMin = !isNullOrUndefined(minLengthOutput.value) && inputValue.length < +minLengthOutput.value;\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(error[name].message);\n        return error;\n      }\n    }\n  }\n  if (pattern && !isEmpty && isString(inputValue)) {\n    const {\n      value: patternValue,\n      message\n    } = getValueAndMessage(pattern);\n    if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message)\n      };\n      if (!validateAllFieldCriteria) {\n        setCustomValidity(message);\n        return error;\n      }\n    }\n  }\n  if (validate) {\n    if (isFunction(validate)) {\n      const result = await validate(inputValue, formValues);\n      const validateError = getValidateError(result, inputRef);\n      if (validateError) {\n        error[name] = {\n          ...validateError,\n          ...appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message)\n        };\n        if (!validateAllFieldCriteria) {\n          setCustomValidity(validateError.message);\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {};\n      for (const key in validate) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n        const validateError = getValidateError(await validate[key](inputValue, formValues), inputRef, key);\n        if (validateError) {\n          validationResult = {\n            ...validateError,\n            ...appendErrorsCurry(key, validateError.message)\n          };\n          setCustomValidity(validateError.message);\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: inputRef,\n          ...validationResult\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n  setCustomValidity(true);\n  return error;\n};\nfunction append(data, value) {\n  return [...data, ...convertToArrayPayload(value)];\n}\nvar fillEmptyArray = value => Array.isArray(value) ? value.map(() => undefined) : undefined;\nfunction insert(data, index, value) {\n  return [...data.slice(0, index), ...convertToArrayPayload(value), ...data.slice(index)];\n}\nvar moveArrayAt = (data, from, to) => {\n  if (!Array.isArray(data)) {\n    return [];\n  }\n  if (isUndefined(data[to])) {\n    data[to] = undefined;\n  }\n  data.splice(to, 0, data.splice(from, 1)[0]);\n  return data;\n};\nfunction prepend(data, value) {\n  return [...convertToArrayPayload(value), ...convertToArrayPayload(data)];\n}\nfunction removeAtIndexes(data, indexes) {\n  let i = 0;\n  const temp = [...data];\n  for (const index of indexes) {\n    temp.splice(index - i, 1);\n    i++;\n  }\n  return compact(temp).length ? temp : [];\n}\nvar removeArrayAt = (data, index) => isUndefined(index) ? [] : removeAtIndexes(data, convertToArrayPayload(index).sort((a, b) => a - b));\nvar swapArrayAt = (data, indexA, indexB) => {\n  data[indexA] = [data[indexB], data[indexB] = data[indexA]][0];\n};\nfunction baseGet(object, updatePath) {\n  const length = updatePath.slice(0, -1).length;\n  let index = 0;\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n  return object;\n}\nfunction isEmptyArray(obj) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key) && !isUndefined(obj[key])) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction unset(object, path) {\n  const paths = Array.isArray(path) ? path : isKey(path) ? [path] : stringToPath(path);\n  const childObject = paths.length === 1 ? object : baseGet(object, paths);\n  const index = paths.length - 1;\n  const key = paths[index];\n  if (childObject) {\n    delete childObject[key];\n  }\n  if (index !== 0 && (isObject(childObject) && isEmptyObject(childObject) || Array.isArray(childObject) && isEmptyArray(childObject))) {\n    unset(object, paths.slice(0, -1));\n  }\n  return object;\n}\nvar updateAt = (fieldValues, index, value) => {\n  fieldValues[index] = value;\n  return fieldValues;\n};\n\n/**\n * A custom hook that exposes convenient methods to perform operations with a list of dynamic inputs that need to be appended, updated, removed etc. • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn) • [Video](https://youtu.be/4MrbfGSFY2A)\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usefieldarray) • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn)\n *\n * @param props - useFieldArray props\n *\n * @returns methods - functions to manipulate with the Field Arrays (dynamic inputs) {@link UseFieldArrayReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, control, handleSubmit, reset, trigger, setError } = useForm({\n *     defaultValues: {\n *       test: []\n *     }\n *   });\n *   const { fields, append } = useFieldArray({\n *     control,\n *     name: \"test\"\n *   });\n *\n *   return (\n *     <form onSubmit={handleSubmit(data => console.log(data))}>\n *       {fields.map((item, index) => (\n *          <input key={item.id} {...register(`test.${index}.firstName`)}  />\n *       ))}\n *       <button type=\"button\" onClick={() => append({ firstName: \"bill\" })}>\n *         append\n *       </button>\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFieldArray(props) {\n  const methods = useFormContext();\n  const {\n    control = methods.control,\n    name,\n    keyName = 'id',\n    shouldUnregister\n  } = props;\n  const [fields, setFields] = React.useState(control._getFieldArray(name));\n  const ids = React.useRef(control._getFieldArray(name).map(generateId));\n  const _fieldIds = React.useRef(fields);\n  const _name = React.useRef(name);\n  const _actioned = React.useRef(false);\n  _name.current = name;\n  _fieldIds.current = fields;\n  control._names.array.add(name);\n  props.rules && control.register(name, props.rules);\n  useSubscribe({\n    next: _ref => {\n      let {\n        values,\n        name: fieldArrayName\n      } = _ref;\n      if (fieldArrayName === _name.current || !fieldArrayName) {\n        const fieldValues = get(values, _name.current);\n        if (Array.isArray(fieldValues)) {\n          setFields(fieldValues);\n          ids.current = fieldValues.map(generateId);\n        }\n      }\n    },\n    subject: control._subjects.array\n  });\n  const updateValues = React.useCallback(updatedFieldArrayValues => {\n    _actioned.current = true;\n    control._updateFieldArray(name, updatedFieldArrayValues);\n  }, [control, name]);\n  const append$1 = (value, options) => {\n    const appendValue = convertToArrayPayload(cloneObject(value));\n    const updatedFieldArrayValues = append(control._getFieldArray(name), appendValue);\n    control._names.focus = getFocusFieldName(name, updatedFieldArrayValues.length - 1, options);\n    ids.current = append(ids.current, appendValue.map(generateId));\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, append, {\n      argA: fillEmptyArray(value)\n    });\n  };\n  const prepend$1 = (value, options) => {\n    const prependValue = convertToArrayPayload(cloneObject(value));\n    const updatedFieldArrayValues = prepend(control._getFieldArray(name), prependValue);\n    control._names.focus = getFocusFieldName(name, 0, options);\n    ids.current = prepend(ids.current, prependValue.map(generateId));\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, prepend, {\n      argA: fillEmptyArray(value)\n    });\n  };\n  const remove = index => {\n    const updatedFieldArrayValues = removeArrayAt(control._getFieldArray(name), index);\n    ids.current = removeArrayAt(ids.current, index);\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, removeArrayAt, {\n      argA: index\n    });\n  };\n  const insert$1 = (index, value, options) => {\n    const insertValue = convertToArrayPayload(cloneObject(value));\n    const updatedFieldArrayValues = insert(control._getFieldArray(name), index, insertValue);\n    control._names.focus = getFocusFieldName(name, index, options);\n    ids.current = insert(ids.current, index, insertValue.map(generateId));\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, insert, {\n      argA: index,\n      argB: fillEmptyArray(value)\n    });\n  };\n  const swap = (indexA, indexB) => {\n    const updatedFieldArrayValues = control._getFieldArray(name);\n    swapArrayAt(updatedFieldArrayValues, indexA, indexB);\n    swapArrayAt(ids.current, indexA, indexB);\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, swapArrayAt, {\n      argA: indexA,\n      argB: indexB\n    }, false);\n  };\n  const move = (from, to) => {\n    const updatedFieldArrayValues = control._getFieldArray(name);\n    moveArrayAt(updatedFieldArrayValues, from, to);\n    moveArrayAt(ids.current, from, to);\n    updateValues(updatedFieldArrayValues);\n    setFields(updatedFieldArrayValues);\n    control._updateFieldArray(name, updatedFieldArrayValues, moveArrayAt, {\n      argA: from,\n      argB: to\n    }, false);\n  };\n  const update = (index, value) => {\n    const updateValue = cloneObject(value);\n    const updatedFieldArrayValues = updateAt(control._getFieldArray(name), index, updateValue);\n    ids.current = [...updatedFieldArrayValues].map((item, i) => !item || i === index ? generateId() : ids.current[i]);\n    updateValues(updatedFieldArrayValues);\n    setFields([...updatedFieldArrayValues]);\n    control._updateFieldArray(name, updatedFieldArrayValues, updateAt, {\n      argA: index,\n      argB: updateValue\n    }, true, false);\n  };\n  const replace = value => {\n    const updatedFieldArrayValues = convertToArrayPayload(cloneObject(value));\n    ids.current = updatedFieldArrayValues.map(generateId);\n    updateValues([...updatedFieldArrayValues]);\n    setFields([...updatedFieldArrayValues]);\n    control._updateFieldArray(name, [...updatedFieldArrayValues], data => data, {}, true, false);\n  };\n  React.useEffect(() => {\n    control._state.action = false;\n    isWatched(name, control._names) && control._subjects.state.next({\n      ...control._formState\n    });\n    if (_actioned.current && (!getValidationModes(control._options.mode).isOnSubmit || control._formState.isSubmitted)) {\n      if (control._options.resolver) {\n        control._executeSchema([name]).then(result => {\n          const error = get(result.errors, name);\n          const existingError = get(control._formState.errors, name);\n          if (existingError ? !error && existingError.type || error && (existingError.type !== error.type || existingError.message !== error.message) : error && error.type) {\n            error ? set(control._formState.errors, name, error) : unset(control._formState.errors, name);\n            control._subjects.state.next({\n              errors: control._formState.errors\n            });\n          }\n        });\n      } else {\n        const field = get(control._fields, name);\n        if (field && field._f) {\n          validateField(field, control._formValues, control._options.criteriaMode === VALIDATION_MODE.all, control._options.shouldUseNativeValidation, true).then(error => !isEmptyObject(error) && control._subjects.state.next({\n            errors: updateFieldArrayRootError(control._formState.errors, error, name)\n          }));\n        }\n      }\n    }\n    control._subjects.values.next({\n      name,\n      values: {\n        ...control._formValues\n      }\n    });\n    control._names.focus && focusFieldBy(control._fields, key => !!key && key.startsWith(control._names.focus || ''));\n    control._names.focus = '';\n    control._updateValid();\n  }, [fields, name, control]);\n  React.useEffect(() => {\n    !get(control._formValues, name) && control._updateFieldArray(name);\n    return () => {\n      (control._options.shouldUnregister || shouldUnregister) && control.unregister(name);\n    };\n  }, [name, control, keyName, shouldUnregister]);\n  return {\n    swap: React.useCallback(swap, [updateValues, name, control]),\n    move: React.useCallback(move, [updateValues, name, control]),\n    prepend: React.useCallback(prepend$1, [updateValues, name, control]),\n    append: React.useCallback(append$1, [updateValues, name, control]),\n    remove: React.useCallback(remove, [updateValues, name, control]),\n    insert: React.useCallback(insert$1, [updateValues, name, control]),\n    update: React.useCallback(update, [updateValues, name, control]),\n    replace: React.useCallback(replace, [updateValues, name, control]),\n    fields: React.useMemo(() => fields.map((field, index) => ({\n      ...field,\n      [keyName]: ids.current[index] || generateId()\n    })), [fields, keyName])\n  };\n}\nfunction createSubject() {\n  let _observers = [];\n  const next = value => {\n    for (const observer of _observers) {\n      observer.next && observer.next(value);\n    }\n  };\n  const subscribe = observer => {\n    _observers.push(observer);\n    return {\n      unsubscribe: () => {\n        _observers = _observers.filter(o => o !== observer);\n      }\n    };\n  };\n  const unsubscribe = () => {\n    _observers = [];\n  };\n  return {\n    get observers() {\n      return _observers;\n    },\n    next,\n    subscribe,\n    unsubscribe\n  };\n}\nvar isPrimitive = value => isNullOrUndefined(value) || !isObjectType(value);\nfunction deepEqual(object1, object2) {\n  if (isPrimitive(object1) || isPrimitive(object2)) {\n    return object1 === object2;\n  }\n  if (isDateObject(object1) && isDateObject(object2)) {\n    return object1.getTime() === object2.getTime();\n  }\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n  for (const key of keys1) {\n    const val1 = object1[key];\n    if (!keys2.includes(key)) {\n      return false;\n    }\n    if (key !== 'ref') {\n      const val2 = object2[key];\n      if (isDateObject(val1) && isDateObject(val2) || isObject(val1) && isObject(val2) || Array.isArray(val1) && Array.isArray(val2) ? !deepEqual(val1, val2) : val1 !== val2) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\nvar isMultipleSelect = element => element.type === \"select-multiple\";\nvar isRadioOrCheckbox = ref => isRadioInput(ref) || isCheckBoxInput(ref);\nvar live = ref => isHTMLElement(ref) && ref.isConnected;\nvar objectHasFunction = data => {\n  for (const key in data) {\n    if (isFunction(data[key])) {\n      return true;\n    }\n  }\n  return false;\n};\nfunction markFieldsDirty(data) {\n  let fields = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const isParentNodeArray = Array.isArray(data);\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (Array.isArray(data[key]) || isObject(data[key]) && !objectHasFunction(data[key])) {\n        fields[key] = Array.isArray(data[key]) ? [] : {};\n        markFieldsDirty(data[key], fields[key]);\n      } else if (!isNullOrUndefined(data[key])) {\n        fields[key] = true;\n      }\n    }\n  }\n  return fields;\n}\nfunction getDirtyFieldsFromDefaultValues(data, formValues, dirtyFieldsFromValues) {\n  const isParentNodeArray = Array.isArray(data);\n  if (isObject(data) || isParentNodeArray) {\n    for (const key in data) {\n      if (Array.isArray(data[key]) || isObject(data[key]) && !objectHasFunction(data[key])) {\n        if (isUndefined(formValues) || isPrimitive(dirtyFieldsFromValues[key])) {\n          dirtyFieldsFromValues[key] = Array.isArray(data[key]) ? markFieldsDirty(data[key], []) : {\n            ...markFieldsDirty(data[key])\n          };\n        } else {\n          getDirtyFieldsFromDefaultValues(data[key], isNullOrUndefined(formValues) ? {} : formValues[key], dirtyFieldsFromValues[key]);\n        }\n      } else {\n        dirtyFieldsFromValues[key] = !deepEqual(data[key], formValues[key]);\n      }\n    }\n  }\n  return dirtyFieldsFromValues;\n}\nvar getDirtyFields = (defaultValues, formValues) => getDirtyFieldsFromDefaultValues(defaultValues, formValues, markFieldsDirty(formValues));\nvar getFieldValueAs = (value, _ref2) => {\n  let {\n    valueAsNumber,\n    valueAsDate,\n    setValueAs\n  } = _ref2;\n  return isUndefined(value) ? value : valueAsNumber ? value === '' ? NaN : value ? +value : value : valueAsDate && isString(value) ? new Date(value) : setValueAs ? setValueAs(value) : value;\n};\nfunction getFieldValue(_f) {\n  const ref = _f.ref;\n  if (_f.refs ? _f.refs.every(ref => ref.disabled) : ref.disabled) {\n    return;\n  }\n  if (isFileInput(ref)) {\n    return ref.files;\n  }\n  if (isRadioInput(ref)) {\n    return getRadioValue(_f.refs).value;\n  }\n  if (isMultipleSelect(ref)) {\n    return [...ref.selectedOptions].map(_ref3 => {\n      let {\n        value\n      } = _ref3;\n      return value;\n    });\n  }\n  if (isCheckBoxInput(ref)) {\n    return getCheckboxValue(_f.refs).value;\n  }\n  return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\n}\nvar getResolverOptions = (fieldsNames, _fields, criteriaMode, shouldUseNativeValidation) => {\n  const fields = {};\n  for (const name of fieldsNames) {\n    const field = get(_fields, name);\n    field && set(fields, name, field._f);\n  }\n  return {\n    criteriaMode,\n    names: [...fieldsNames],\n    fields,\n    shouldUseNativeValidation\n  };\n};\nvar getRuleValue = rule => isUndefined(rule) ? rule : isRegex(rule) ? rule.source : isObject(rule) ? isRegex(rule.value) ? rule.value.source : rule.value : rule;\nvar hasValidation = options => options.mount && (options.required || options.min || options.max || options.maxLength || options.minLength || options.pattern || options.validate);\nfunction schemaErrorLookup(errors, _fields, name) {\n  const error = get(errors, name);\n  if (error || isKey(name)) {\n    return {\n      error,\n      name\n    };\n  }\n  const names = name.split('.');\n  while (names.length) {\n    const fieldName = names.join('.');\n    const field = get(_fields, fieldName);\n    const foundError = get(errors, fieldName);\n    if (field && !Array.isArray(field) && name !== fieldName) {\n      return {\n        name\n      };\n    }\n    if (foundError && foundError.type) {\n      return {\n        name: fieldName,\n        error: foundError\n      };\n    }\n    names.pop();\n  }\n  return {\n    name\n  };\n}\nvar skipValidation = (isBlurEvent, isTouched, isSubmitted, reValidateMode, mode) => {\n  if (mode.isOnAll) {\n    return false;\n  } else if (!isSubmitted && mode.isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\nvar unsetEmptyArray = (ref, name) => !compact(get(ref, name)).length && unset(ref, name);\nconst defaultOptions = {\n  mode: VALIDATION_MODE.onSubmit,\n  reValidateMode: VALIDATION_MODE.onChange,\n  shouldFocusError: true\n};\nfunction createFormControl() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let flushRootRender = arguments.length > 1 ? arguments[1] : undefined;\n  let _options = {\n    ...defaultOptions,\n    ...props\n  };\n  let _formState = {\n    submitCount: 0,\n    isDirty: false,\n    isLoading: isFunction(_options.defaultValues),\n    isValidating: false,\n    isSubmitted: false,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    touchedFields: {},\n    dirtyFields: {},\n    errors: {}\n  };\n  let _fields = {};\n  let _defaultValues = isObject(_options.defaultValues) || isObject(_options.values) ? cloneObject(_options.defaultValues || _options.values) || {} : {};\n  let _formValues = _options.shouldUnregister ? {} : cloneObject(_defaultValues);\n  let _state = {\n    action: false,\n    mount: false,\n    watch: false\n  };\n  let _names = {\n    mount: new Set(),\n    unMount: new Set(),\n    array: new Set(),\n    watch: new Set()\n  };\n  let delayErrorCallback;\n  let timer = 0;\n  const _proxyFormState = {\n    isDirty: false,\n    dirtyFields: false,\n    touchedFields: false,\n    isValidating: false,\n    isValid: false,\n    errors: false\n  };\n  const _subjects = {\n    values: createSubject(),\n    array: createSubject(),\n    state: createSubject()\n  };\n  const shouldCaptureDirtyFields = props.resetOptions && props.resetOptions.keepDirtyValues;\n  const validationModeBeforeSubmit = getValidationModes(_options.mode);\n  const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\n  const shouldDisplayAllAssociatedErrors = _options.criteriaMode === VALIDATION_MODE.all;\n  const debounce = callback => wait => {\n    clearTimeout(timer);\n    timer = setTimeout(callback, wait);\n  };\n  const _updateValid = async shouldUpdateValid => {\n    if (_proxyFormState.isValid || shouldUpdateValid) {\n      const isValid = _options.resolver ? isEmptyObject((await _executeSchema()).errors) : await executeBuiltInValidation(_fields, true);\n      if (isValid !== _formState.isValid) {\n        _subjects.state.next({\n          isValid\n        });\n      }\n    }\n  };\n  const _updateIsValidating = value => _proxyFormState.isValidating && _subjects.state.next({\n    isValidating: value\n  });\n  const _updateFieldArray = function (name) {\n    let values = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    let method = arguments.length > 2 ? arguments[2] : undefined;\n    let args = arguments.length > 3 ? arguments[3] : undefined;\n    let shouldSetValues = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n    let shouldUpdateFieldsAndState = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n    if (args && method) {\n      _state.action = true;\n      if (shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {\n        const fieldValues = method(get(_fields, name), args.argA, args.argB);\n        shouldSetValues && set(_fields, name, fieldValues);\n      }\n      if (shouldUpdateFieldsAndState && Array.isArray(get(_formState.errors, name))) {\n        const errors = method(get(_formState.errors, name), args.argA, args.argB);\n        shouldSetValues && set(_formState.errors, name, errors);\n        unsetEmptyArray(_formState.errors, name);\n      }\n      if (_proxyFormState.touchedFields && shouldUpdateFieldsAndState && Array.isArray(get(_formState.touchedFields, name))) {\n        const touchedFields = method(get(_formState.touchedFields, name), args.argA, args.argB);\n        shouldSetValues && set(_formState.touchedFields, name, touchedFields);\n      }\n      if (_proxyFormState.dirtyFields) {\n        _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n      }\n      _subjects.state.next({\n        name,\n        isDirty: _getDirty(name, values),\n        dirtyFields: _formState.dirtyFields,\n        errors: _formState.errors,\n        isValid: _formState.isValid\n      });\n    } else {\n      set(_formValues, name, values);\n    }\n  };\n  const updateErrors = (name, error) => {\n    set(_formState.errors, name, error);\n    _subjects.state.next({\n      errors: _formState.errors\n    });\n  };\n  const updateValidAndValue = (name, shouldSkipSetValueAs, value, ref) => {\n    const field = get(_fields, name);\n    if (field) {\n      const defaultValue = get(_formValues, name, isUndefined(value) ? get(_defaultValues, name) : value);\n      isUndefined(defaultValue) || ref && ref.defaultChecked || shouldSkipSetValueAs ? set(_formValues, name, shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f)) : setFieldValue(name, defaultValue);\n      _state.mount && _updateValid();\n    }\n  };\n  const updateTouchAndDirty = (name, fieldValue, isBlurEvent, shouldDirty, shouldRender) => {\n    let shouldUpdateField = false;\n    let isPreviousDirty = false;\n    const output = {\n      name\n    };\n    if (!isBlurEvent || shouldDirty) {\n      if (_proxyFormState.isDirty) {\n        isPreviousDirty = _formState.isDirty;\n        _formState.isDirty = output.isDirty = _getDirty();\n        shouldUpdateField = isPreviousDirty !== output.isDirty;\n      }\n      const isCurrentFieldPristine = deepEqual(get(_defaultValues, name), fieldValue);\n      isPreviousDirty = get(_formState.dirtyFields, name);\n      isCurrentFieldPristine ? unset(_formState.dirtyFields, name) : set(_formState.dirtyFields, name, true);\n      output.dirtyFields = _formState.dirtyFields;\n      shouldUpdateField = shouldUpdateField || _proxyFormState.dirtyFields && isPreviousDirty !== !isCurrentFieldPristine;\n    }\n    if (isBlurEvent) {\n      const isPreviousFieldTouched = get(_formState.touchedFields, name);\n      if (!isPreviousFieldTouched) {\n        set(_formState.touchedFields, name, isBlurEvent);\n        output.touchedFields = _formState.touchedFields;\n        shouldUpdateField = shouldUpdateField || _proxyFormState.touchedFields && isPreviousFieldTouched !== isBlurEvent;\n      }\n    }\n    shouldUpdateField && shouldRender && _subjects.state.next(output);\n    return shouldUpdateField ? output : {};\n  };\n  const shouldRenderByError = (name, isValid, error, fieldState) => {\n    const previousFieldError = get(_formState.errors, name);\n    const shouldUpdateValid = _proxyFormState.isValid && isBoolean(isValid) && _formState.isValid !== isValid;\n    if (props.delayError && error) {\n      delayErrorCallback = debounce(() => updateErrors(name, error));\n      delayErrorCallback(props.delayError);\n    } else {\n      clearTimeout(timer);\n      delayErrorCallback = null;\n      error ? set(_formState.errors, name, error) : unset(_formState.errors, name);\n    }\n    if ((error ? !deepEqual(previousFieldError, error) : previousFieldError) || !isEmptyObject(fieldState) || shouldUpdateValid) {\n      const updatedFormState = {\n        ...fieldState,\n        ...(shouldUpdateValid && isBoolean(isValid) ? {\n          isValid\n        } : {}),\n        errors: _formState.errors,\n        name\n      };\n      _formState = {\n        ..._formState,\n        ...updatedFormState\n      };\n      _subjects.state.next(updatedFormState);\n    }\n    _updateIsValidating(false);\n  };\n  const _executeSchema = async name => _options.resolver(_formValues, _options.context, getResolverOptions(name || _names.mount, _fields, _options.criteriaMode, _options.shouldUseNativeValidation));\n  const executeSchemaAndUpdateState = async names => {\n    const {\n      errors\n    } = await _executeSchema();\n    if (names) {\n      for (const name of names) {\n        const error = get(errors, name);\n        error ? set(_formState.errors, name, error) : unset(_formState.errors, name);\n      }\n    } else {\n      _formState.errors = errors;\n    }\n    return errors;\n  };\n  const executeBuiltInValidation = async function (fields, shouldOnlyCheckValid) {\n    let context = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      valid: true\n    };\n    for (const name in fields) {\n      const field = fields[name];\n      if (field) {\n        const {\n          _f,\n          ...fieldValue\n        } = field;\n        if (_f) {\n          const isFieldArrayRoot = _names.array.has(_f.name);\n          const fieldError = await validateField(field, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation && !shouldOnlyCheckValid, isFieldArrayRoot);\n          if (fieldError[_f.name]) {\n            context.valid = false;\n            if (shouldOnlyCheckValid) {\n              break;\n            }\n          }\n          !shouldOnlyCheckValid && (get(fieldError, _f.name) ? isFieldArrayRoot ? updateFieldArrayRootError(_formState.errors, fieldError, _f.name) : set(_formState.errors, _f.name, fieldError[_f.name]) : unset(_formState.errors, _f.name));\n        }\n        fieldValue && (await executeBuiltInValidation(fieldValue, shouldOnlyCheckValid, context));\n      }\n    }\n    return context.valid;\n  };\n  const _removeUnmounted = () => {\n    for (const name of _names.unMount) {\n      const field = get(_fields, name);\n      field && (field._f.refs ? field._f.refs.every(ref => !live(ref)) : !live(field._f.ref)) && unregister(name);\n    }\n    _names.unMount = new Set();\n  };\n  const _getDirty = (name, data) => (name && data && set(_formValues, name, data), !deepEqual(getValues(), _defaultValues));\n  const _getWatch = (names, defaultValue, isGlobal) => generateWatchOutput(names, _names, {\n    ...(_state.mount ? _formValues : isUndefined(defaultValue) ? _defaultValues : isString(names) ? {\n      [names]: defaultValue\n    } : defaultValue)\n  }, isGlobal, defaultValue);\n  const _getFieldArray = name => compact(get(_state.mount ? _formValues : _defaultValues, name, props.shouldUnregister ? get(_defaultValues, name, []) : []));\n  const setFieldValue = function (name, value) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const field = get(_fields, name);\n    let fieldValue = value;\n    if (field) {\n      const fieldReference = field._f;\n      if (fieldReference) {\n        !fieldReference.disabled && set(_formValues, name, getFieldValueAs(value, fieldReference));\n        fieldValue = isHTMLElement(fieldReference.ref) && isNullOrUndefined(value) ? '' : value;\n        if (isMultipleSelect(fieldReference.ref)) {\n          [...fieldReference.ref.options].forEach(optionRef => optionRef.selected = fieldValue.includes(optionRef.value));\n        } else if (fieldReference.refs) {\n          if (isCheckBoxInput(fieldReference.ref)) {\n            fieldReference.refs.length > 1 ? fieldReference.refs.forEach(checkboxRef => (!checkboxRef.defaultChecked || !checkboxRef.disabled) && (checkboxRef.checked = Array.isArray(fieldValue) ? !!fieldValue.find(data => data === checkboxRef.value) : fieldValue === checkboxRef.value)) : fieldReference.refs[0] && (fieldReference.refs[0].checked = !!fieldValue);\n          } else {\n            fieldReference.refs.forEach(radioRef => radioRef.checked = radioRef.value === fieldValue);\n          }\n        } else if (isFileInput(fieldReference.ref)) {\n          fieldReference.ref.value = '';\n        } else {\n          fieldReference.ref.value = fieldValue;\n          if (!fieldReference.ref.type) {\n            _subjects.values.next({\n              name,\n              values: {\n                ..._formValues\n              }\n            });\n          }\n        }\n      }\n    }\n    (options.shouldDirty || options.shouldTouch) && updateTouchAndDirty(name, fieldValue, options.shouldTouch, options.shouldDirty, true);\n    options.shouldValidate && trigger(name);\n  };\n  const setValues = (name, value, options) => {\n    for (const fieldKey in value) {\n      const fieldValue = value[fieldKey];\n      const fieldName = \"\".concat(name, \".\").concat(fieldKey);\n      const field = get(_fields, fieldName);\n      (_names.array.has(name) || !isPrimitive(fieldValue) || field && !field._f) && !isDateObject(fieldValue) ? setValues(fieldName, fieldValue, options) : setFieldValue(fieldName, fieldValue, options);\n    }\n  };\n  const setValue = function (name, value) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const field = get(_fields, name);\n    const isFieldArray = _names.array.has(name);\n    const cloneValue = cloneObject(value);\n    set(_formValues, name, cloneValue);\n    if (isFieldArray) {\n      _subjects.array.next({\n        name,\n        values: {\n          ..._formValues\n        }\n      });\n      if ((_proxyFormState.isDirty || _proxyFormState.dirtyFields) && options.shouldDirty) {\n        _subjects.state.next({\n          name,\n          dirtyFields: getDirtyFields(_defaultValues, _formValues),\n          isDirty: _getDirty(name, cloneValue)\n        });\n      }\n    } else {\n      field && !field._f && !isNullOrUndefined(cloneValue) ? setValues(name, cloneValue, options) : setFieldValue(name, cloneValue, options);\n    }\n    isWatched(name, _names) && _subjects.state.next({\n      ..._formState\n    });\n    _subjects.values.next({\n      name,\n      values: {\n        ..._formValues\n      }\n    });\n    !_state.mount && flushRootRender();\n  };\n  const onChange = async event => {\n    const target = event.target;\n    let name = target.name;\n    let isFieldValueUpdated = true;\n    const field = get(_fields, name);\n    const getCurrentFieldValue = () => target.type ? getFieldValue(field._f) : getEventValue(event);\n    if (field) {\n      let error;\n      let isValid;\n      const fieldValue = getCurrentFieldValue();\n      const isBlurEvent = event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;\n      const shouldSkipValidation = !hasValidation(field._f) && !_options.resolver && !get(_formState.errors, name) && !field._f.deps || skipValidation(isBlurEvent, get(_formState.touchedFields, name), _formState.isSubmitted, validationModeAfterSubmit, validationModeBeforeSubmit);\n      const watched = isWatched(name, _names, isBlurEvent);\n      set(_formValues, name, fieldValue);\n      if (isBlurEvent) {\n        field._f.onBlur && field._f.onBlur(event);\n        delayErrorCallback && delayErrorCallback(0);\n      } else if (field._f.onChange) {\n        field._f.onChange(event);\n      }\n      const fieldState = updateTouchAndDirty(name, fieldValue, isBlurEvent, false);\n      const shouldRender = !isEmptyObject(fieldState) || watched;\n      !isBlurEvent && _subjects.values.next({\n        name,\n        type: event.type,\n        values: {\n          ..._formValues\n        }\n      });\n      if (shouldSkipValidation) {\n        _proxyFormState.isValid && _updateValid();\n        return shouldRender && _subjects.state.next({\n          name,\n          ...(watched ? {} : fieldState)\n        });\n      }\n      !isBlurEvent && watched && _subjects.state.next({\n        ..._formState\n      });\n      _updateIsValidating(true);\n      if (_options.resolver) {\n        const {\n          errors\n        } = await _executeSchema([name]);\n        const previousErrorLookupResult = schemaErrorLookup(_formState.errors, _fields, name);\n        const errorLookupResult = schemaErrorLookup(errors, _fields, previousErrorLookupResult.name || name);\n        error = errorLookupResult.error;\n        name = errorLookupResult.name;\n        isValid = isEmptyObject(errors);\n      } else {\n        error = (await validateField(field, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation))[name];\n        isFieldValueUpdated = isNaN(fieldValue) || fieldValue === get(_formValues, name, fieldValue);\n        if (isFieldValueUpdated) {\n          if (error) {\n            isValid = false;\n          } else if (_proxyFormState.isValid) {\n            isValid = await executeBuiltInValidation(_fields, true);\n          }\n        }\n      }\n      if (isFieldValueUpdated) {\n        field._f.deps && trigger(field._f.deps);\n        shouldRenderByError(name, isValid, error, fieldState);\n      }\n    }\n  };\n  const trigger = async function (name) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let isValid;\n    let validationResult;\n    const fieldNames = convertToArrayPayload(name);\n    _updateIsValidating(true);\n    if (_options.resolver) {\n      const errors = await executeSchemaAndUpdateState(isUndefined(name) ? name : fieldNames);\n      isValid = isEmptyObject(errors);\n      validationResult = name ? !fieldNames.some(name => get(errors, name)) : isValid;\n    } else if (name) {\n      validationResult = (await Promise.all(fieldNames.map(async fieldName => {\n        const field = get(_fields, fieldName);\n        return await executeBuiltInValidation(field && field._f ? {\n          [fieldName]: field\n        } : field);\n      }))).every(Boolean);\n      !(!validationResult && !_formState.isValid) && _updateValid();\n    } else {\n      validationResult = isValid = await executeBuiltInValidation(_fields);\n    }\n    _subjects.state.next({\n      ...(!isString(name) || _proxyFormState.isValid && isValid !== _formState.isValid ? {} : {\n        name\n      }),\n      ...(_options.resolver || !name ? {\n        isValid\n      } : {}),\n      errors: _formState.errors,\n      isValidating: false\n    });\n    options.shouldFocus && !validationResult && focusFieldBy(_fields, key => key && get(_formState.errors, key), name ? fieldNames : _names.mount);\n    return validationResult;\n  };\n  const getValues = fieldNames => {\n    const values = {\n      ..._defaultValues,\n      ...(_state.mount ? _formValues : {})\n    };\n    return isUndefined(fieldNames) ? values : isString(fieldNames) ? get(values, fieldNames) : fieldNames.map(name => get(values, name));\n  };\n  const getFieldState = (name, formState) => ({\n    invalid: !!get((formState || _formState).errors, name),\n    isDirty: !!get((formState || _formState).dirtyFields, name),\n    isTouched: !!get((formState || _formState).touchedFields, name),\n    error: get((formState || _formState).errors, name)\n  });\n  const clearErrors = name => {\n    name && convertToArrayPayload(name).forEach(inputName => unset(_formState.errors, inputName));\n    _subjects.state.next({\n      errors: name ? _formState.errors : {}\n    });\n  };\n  const setError = (name, error, options) => {\n    const ref = (get(_fields, name, {\n      _f: {}\n    })._f || {}).ref;\n    set(_formState.errors, name, {\n      ...error,\n      ref\n    });\n    _subjects.state.next({\n      name,\n      errors: _formState.errors,\n      isValid: false\n    });\n    options && options.shouldFocus && ref && ref.focus && ref.focus();\n  };\n  const watch = (name, defaultValue) => isFunction(name) ? _subjects.values.subscribe({\n    next: payload => name(_getWatch(undefined, defaultValue), payload)\n  }) : _getWatch(name, defaultValue, true);\n  const unregister = function (name) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\n      _names.mount.delete(fieldName);\n      _names.array.delete(fieldName);\n      if (!options.keepValue) {\n        unset(_fields, fieldName);\n        unset(_formValues, fieldName);\n      }\n      !options.keepError && unset(_formState.errors, fieldName);\n      !options.keepDirty && unset(_formState.dirtyFields, fieldName);\n      !options.keepTouched && unset(_formState.touchedFields, fieldName);\n      !_options.shouldUnregister && !options.keepDefaultValue && unset(_defaultValues, fieldName);\n    }\n    _subjects.values.next({\n      values: {\n        ..._formValues\n      }\n    });\n    _subjects.state.next({\n      ..._formState,\n      ...(!options.keepDirty ? {} : {\n        isDirty: _getDirty()\n      })\n    });\n    !options.keepIsValid && _updateValid();\n  };\n  const register = function (name) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let field = get(_fields, name);\n    const disabledIsDefined = isBoolean(options.disabled);\n    set(_fields, name, {\n      ...(field || {}),\n      _f: {\n        ...(field && field._f ? field._f : {\n          ref: {\n            name\n          }\n        }),\n        name,\n        mount: true,\n        ...options\n      }\n    });\n    _names.mount.add(name);\n    field ? disabledIsDefined && set(_formValues, name, options.disabled ? undefined : get(_formValues, name, getFieldValue(field._f))) : updateValidAndValue(name, true, options.value);\n    return {\n      ...(disabledIsDefined ? {\n        disabled: options.disabled\n      } : {}),\n      ...(_options.progressive ? {\n        required: !!options.required,\n        min: getRuleValue(options.min),\n        max: getRuleValue(options.max),\n        minLength: getRuleValue(options.minLength),\n        maxLength: getRuleValue(options.maxLength),\n        pattern: getRuleValue(options.pattern)\n      } : {}),\n      name,\n      onChange,\n      onBlur: onChange,\n      ref: ref => {\n        if (ref) {\n          register(name, options);\n          field = get(_fields, name);\n          const fieldRef = isUndefined(ref.value) ? ref.querySelectorAll ? ref.querySelectorAll('input,select,textarea')[0] || ref : ref : ref;\n          const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\n          const refs = field._f.refs || [];\n          if (radioOrCheckbox ? refs.find(option => option === fieldRef) : fieldRef === field._f.ref) {\n            return;\n          }\n          set(_fields, name, {\n            _f: {\n              ...field._f,\n              ...(radioOrCheckbox ? {\n                refs: [...refs.filter(live), fieldRef, ...(Array.isArray(get(_defaultValues, name)) ? [{}] : [])],\n                ref: {\n                  type: fieldRef.type,\n                  name\n                }\n              } : {\n                ref: fieldRef\n              })\n            }\n          });\n          updateValidAndValue(name, false, undefined, fieldRef);\n        } else {\n          field = get(_fields, name, {});\n          if (field._f) {\n            field._f.mount = false;\n          }\n          (_options.shouldUnregister || options.shouldUnregister) && !(isNameInFieldArray(_names.array, name) && _state.action) && _names.unMount.add(name);\n        }\n      }\n    };\n  };\n  const _focusError = () => _options.shouldFocusError && focusFieldBy(_fields, key => key && get(_formState.errors, key), _names.mount);\n  const handleSubmit = (onValid, onInvalid) => async e => {\n    if (e) {\n      e.preventDefault && e.preventDefault();\n      e.persist && e.persist();\n    }\n    let fieldValues = cloneObject(_formValues);\n    _subjects.state.next({\n      isSubmitting: true\n    });\n    if (_options.resolver) {\n      const {\n        errors,\n        values\n      } = await _executeSchema();\n      _formState.errors = errors;\n      fieldValues = values;\n    } else {\n      await executeBuiltInValidation(_fields);\n    }\n    unset(_formState.errors, 'root');\n    if (isEmptyObject(_formState.errors)) {\n      _subjects.state.next({\n        errors: {}\n      });\n      await onValid(fieldValues, e);\n    } else {\n      if (onInvalid) {\n        await onInvalid({\n          ..._formState.errors\n        }, e);\n      }\n      _focusError();\n      setTimeout(_focusError);\n    }\n    _subjects.state.next({\n      isSubmitted: true,\n      isSubmitting: false,\n      isSubmitSuccessful: isEmptyObject(_formState.errors),\n      submitCount: _formState.submitCount + 1,\n      errors: _formState.errors\n    });\n  };\n  const resetField = function (name) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (get(_fields, name)) {\n      if (isUndefined(options.defaultValue)) {\n        setValue(name, get(_defaultValues, name));\n      } else {\n        setValue(name, options.defaultValue);\n        set(_defaultValues, name, options.defaultValue);\n      }\n      if (!options.keepTouched) {\n        unset(_formState.touchedFields, name);\n      }\n      if (!options.keepDirty) {\n        unset(_formState.dirtyFields, name);\n        _formState.isDirty = options.defaultValue ? _getDirty(name, get(_defaultValues, name)) : _getDirty();\n      }\n      if (!options.keepError) {\n        unset(_formState.errors, name);\n        _proxyFormState.isValid && _updateValid();\n      }\n      _subjects.state.next({\n        ..._formState\n      });\n    }\n  };\n  const _reset = function (formValues) {\n    let keepStateOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const updatedValues = formValues || _defaultValues;\n    const cloneUpdatedValues = cloneObject(updatedValues);\n    const values = formValues && !isEmptyObject(formValues) ? cloneUpdatedValues : _defaultValues;\n    if (!keepStateOptions.keepDefaultValues) {\n      _defaultValues = updatedValues;\n    }\n    if (!keepStateOptions.keepValues) {\n      if (keepStateOptions.keepDirtyValues || shouldCaptureDirtyFields) {\n        for (const fieldName of _names.mount) {\n          get(_formState.dirtyFields, fieldName) ? set(values, fieldName, get(_formValues, fieldName)) : setValue(fieldName, get(values, fieldName));\n        }\n      } else {\n        if (isWeb && isUndefined(formValues)) {\n          for (const name of _names.mount) {\n            const field = get(_fields, name);\n            if (field && field._f) {\n              const fieldReference = Array.isArray(field._f.refs) ? field._f.refs[0] : field._f.ref;\n              if (isHTMLElement(fieldReference)) {\n                const form = fieldReference.closest('form');\n                if (form) {\n                  form.reset();\n                  break;\n                }\n              }\n            }\n          }\n        }\n        _fields = {};\n      }\n      _formValues = props.shouldUnregister ? keepStateOptions.keepDefaultValues ? cloneObject(_defaultValues) : {} : cloneObject(values);\n      _subjects.array.next({\n        values: {\n          ...values\n        }\n      });\n      _subjects.values.next({\n        values: {\n          ...values\n        }\n      });\n    }\n    _names = {\n      mount: new Set(),\n      unMount: new Set(),\n      array: new Set(),\n      watch: new Set(),\n      watchAll: false,\n      focus: ''\n    };\n    !_state.mount && flushRootRender();\n    _state.mount = !_proxyFormState.isValid || !!keepStateOptions.keepIsValid;\n    _state.watch = !!props.shouldUnregister;\n    _subjects.state.next({\n      submitCount: keepStateOptions.keepSubmitCount ? _formState.submitCount : 0,\n      isDirty: keepStateOptions.keepDirty ? _formState.isDirty : !!(keepStateOptions.keepDefaultValues && !deepEqual(formValues, _defaultValues)),\n      isSubmitted: keepStateOptions.keepIsSubmitted ? _formState.isSubmitted : false,\n      dirtyFields: keepStateOptions.keepDirtyValues ? _formState.dirtyFields : keepStateOptions.keepDefaultValues && formValues ? getDirtyFields(_defaultValues, formValues) : {},\n      touchedFields: keepStateOptions.keepTouched ? _formState.touchedFields : {},\n      errors: keepStateOptions.keepErrors ? _formState.errors : {},\n      isSubmitting: false,\n      isSubmitSuccessful: false\n    });\n  };\n  const reset = (formValues, keepStateOptions) => _reset(isFunction(formValues) ? formValues(_formValues) : formValues, keepStateOptions);\n  const setFocus = function (name) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const field = get(_fields, name);\n    const fieldReference = field && field._f;\n    if (fieldReference) {\n      const fieldRef = fieldReference.refs ? fieldReference.refs[0] : fieldReference.ref;\n      if (fieldRef.focus) {\n        fieldRef.focus();\n        options.shouldSelect && fieldRef.select();\n      }\n    }\n  };\n  const _updateFormState = updatedFormState => {\n    _formState = {\n      ..._formState,\n      ...updatedFormState\n    };\n  };\n  const _resetDefaultValues = () => isFunction(_options.defaultValues) && _options.defaultValues().then(values => {\n    reset(values, _options.resetOptions);\n    _subjects.state.next({\n      isLoading: false\n    });\n  });\n  return {\n    control: {\n      register,\n      unregister,\n      getFieldState,\n      handleSubmit,\n      setError,\n      _executeSchema,\n      _getWatch,\n      _getDirty,\n      _updateValid,\n      _removeUnmounted,\n      _updateFieldArray,\n      _getFieldArray,\n      _reset,\n      _resetDefaultValues,\n      _updateFormState,\n      _subjects,\n      _proxyFormState,\n      get _fields() {\n        return _fields;\n      },\n      get _formValues() {\n        return _formValues;\n      },\n      get _state() {\n        return _state;\n      },\n      set _state(value) {\n        _state = value;\n      },\n      get _defaultValues() {\n        return _defaultValues;\n      },\n      get _names() {\n        return _names;\n      },\n      set _names(value) {\n        _names = value;\n      },\n      get _formState() {\n        return _formState;\n      },\n      set _formState(value) {\n        _formState = value;\n      },\n      get _options() {\n        return _options;\n      },\n      set _options(value) {\n        _options = {\n          ..._options,\n          ...value\n        };\n      }\n    },\n    trigger,\n    register,\n    handleSubmit,\n    watch,\n    setValue,\n    getValues,\n    reset,\n    resetField,\n    clearErrors,\n    unregister,\n    setError,\n    setFocus,\n    getFieldState\n  };\n}\n\n/**\n * Custom hook to manage the entire form.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)\n *\n * @param props - form configuration and validation parameters.\n *\n * @returns methods - individual functions to manage the form state. {@link UseFormReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, watch, formState: { errors } } = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   console.log(watch(\"example\"));\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input defaultValue=\"test\" {...register(\"example\")} />\n *       <input {...register(\"exampleRequired\", { required: true })} />\n *       {errors.exampleRequired && <span>This field is required</span>}\n *       <button>Submit</button>\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useForm() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const _formControl = React.useRef();\n  const [formState, updateFormState] = React.useState({\n    isDirty: false,\n    isValidating: false,\n    isLoading: isFunction(props.defaultValues),\n    isSubmitted: false,\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: false,\n    submitCount: 0,\n    dirtyFields: {},\n    touchedFields: {},\n    errors: {},\n    defaultValues: isFunction(props.defaultValues) ? undefined : props.defaultValues\n  });\n  if (!_formControl.current) {\n    _formControl.current = {\n      ...createFormControl(props, () => updateFormState(formState => ({\n        ...formState\n      }))),\n      formState\n    };\n  }\n  const control = _formControl.current.control;\n  control._options = props;\n  useSubscribe({\n    subject: control._subjects.state,\n    next: value => {\n      if (shouldRenderFormState(value, control._proxyFormState, control._updateFormState, true)) {\n        updateFormState({\n          ...control._formState\n        });\n      }\n    }\n  });\n  React.useEffect(() => {\n    if (props.values && !deepEqual(props.values, control._defaultValues)) {\n      control._reset(props.values, control._options.resetOptions);\n    } else {\n      control._resetDefaultValues();\n    }\n  }, [props.values, control]);\n  React.useEffect(() => {\n    if (!control._state.mount) {\n      control._updateValid();\n      control._state.mount = true;\n    }\n    if (control._state.watch) {\n      control._state.watch = false;\n      control._subjects.state.next({\n        ...control._formState\n      });\n    }\n    control._removeUnmounted();\n  });\n  _formControl.current.formState = getProxyFormState(formState, control);\n  return _formControl.current;\n}\nexport { Controller, Form, FormProvider, appendErrors, get, set, useController, useFieldArray, useForm, useFormContext, useFormState, useWatch };","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\nimport React from \"react\";\nvar ReCAPTCHA = /*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ReCAPTCHA, _React$Component);\n  function ReCAPTCHA() {\n    var _this;\n    _this = _React$Component.call(this) || this;\n    _this.handleExpired = _this.handleExpired.bind(_assertThisInitialized(_this));\n    _this.handleErrored = _this.handleErrored.bind(_assertThisInitialized(_this));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleRecaptchaRef = _this.handleRecaptchaRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  var _proto = ReCAPTCHA.prototype;\n  _proto.getValue = function getValue() {\n    if (this.props.grecaptcha && this._widgetId !== undefined) {\n      return this.props.grecaptcha.getResponse(this._widgetId);\n    }\n    return null;\n  };\n  _proto.getWidgetId = function getWidgetId() {\n    if (this.props.grecaptcha && this._widgetId !== undefined) {\n      return this._widgetId;\n    }\n    return null;\n  };\n  _proto.execute = function execute() {\n    var grecaptcha = this.props.grecaptcha;\n    if (grecaptcha && this._widgetId !== undefined) {\n      return grecaptcha.execute(this._widgetId);\n    } else {\n      this._executeRequested = true;\n    }\n  };\n  _proto.executeAsync = function executeAsync() {\n    var _this2 = this;\n    return new Promise(function (resolve, reject) {\n      _this2.executionResolve = resolve;\n      _this2.executionReject = reject;\n      _this2.execute();\n    });\n  };\n  _proto.reset = function reset() {\n    if (this.props.grecaptcha && this._widgetId !== undefined) {\n      this.props.grecaptcha.reset(this._widgetId);\n    }\n  };\n  _proto.handleExpired = function handleExpired() {\n    if (this.props.onExpired) {\n      this.props.onExpired();\n    } else {\n      this.handleChange(null);\n    }\n  };\n  _proto.handleErrored = function handleErrored() {\n    if (this.props.onErrored) {\n      this.props.onErrored();\n    }\n    if (this.executionReject) {\n      this.executionReject();\n      delete this.executionResolve;\n      delete this.executionReject;\n    }\n  };\n  _proto.handleChange = function handleChange(token) {\n    if (this.props.onChange) {\n      this.props.onChange(token);\n    }\n    if (this.executionResolve) {\n      this.executionResolve(token);\n      delete this.executionReject;\n      delete this.executionResolve;\n    }\n  };\n  _proto.explicitRender = function explicitRender() {\n    if (this.props.grecaptcha && this.props.grecaptcha.render && this._widgetId === undefined) {\n      var wrapper = document.createElement(\"div\");\n      this._widgetId = this.props.grecaptcha.render(wrapper, {\n        sitekey: this.props.sitekey,\n        callback: this.handleChange,\n        theme: this.props.theme,\n        type: this.props.type,\n        tabindex: this.props.tabindex,\n        \"expired-callback\": this.handleExpired,\n        \"error-callback\": this.handleErrored,\n        size: this.props.size,\n        stoken: this.props.stoken,\n        hl: this.props.hl,\n        badge: this.props.badge\n      });\n      this.captcha.appendChild(wrapper);\n    }\n    if (this._executeRequested && this.props.grecaptcha && this._widgetId !== undefined) {\n      this._executeRequested = false;\n      this.execute();\n    }\n  };\n  _proto.componentDidMount = function componentDidMount() {\n    this.explicitRender();\n  };\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    this.explicitRender();\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this._widgetId !== undefined) {\n      this.delayOfCaptchaIframeRemoving();\n      this.reset();\n    }\n  };\n  _proto.delayOfCaptchaIframeRemoving = function delayOfCaptchaIframeRemoving() {\n    var temporaryNode = document.createElement(\"div\");\n    document.body.appendChild(temporaryNode);\n    temporaryNode.style.display = \"none\"; // move of the recaptcha to a temporary node\n\n    while (this.captcha.firstChild) {\n      temporaryNode.appendChild(this.captcha.firstChild);\n    } // delete the temporary node after reset will be done\n\n    setTimeout(function () {\n      document.body.removeChild(temporaryNode);\n    }, 5000);\n  };\n  _proto.handleRecaptchaRef = function handleRecaptchaRef(elem) {\n    this.captcha = elem;\n  };\n  _proto.render = function render() {\n    // consume properties owned by the reCATPCHA, pass the rest to the div so the user can style it.\n\n    /* eslint-disable no-unused-vars */\n    var _this$props = this.props,\n      sitekey = _this$props.sitekey,\n      onChange = _this$props.onChange,\n      theme = _this$props.theme,\n      type = _this$props.type,\n      tabindex = _this$props.tabindex,\n      onExpired = _this$props.onExpired,\n      onErrored = _this$props.onErrored,\n      size = _this$props.size,\n      stoken = _this$props.stoken,\n      grecaptcha = _this$props.grecaptcha,\n      badge = _this$props.badge,\n      hl = _this$props.hl,\n      childProps = _objectWithoutPropertiesLoose(_this$props, [\"sitekey\", \"onChange\", \"theme\", \"type\", \"tabindex\", \"onExpired\", \"onErrored\", \"size\", \"stoken\", \"grecaptcha\", \"badge\", \"hl\"]);\n    /* eslint-enable no-unused-vars */\n\n    return React.createElement(\"div\", _extends({}, childProps, {\n      ref: this.handleRecaptchaRef\n    }));\n  };\n  return ReCAPTCHA;\n}(React.Component);\nexport { ReCAPTCHA as default };\nReCAPTCHA.displayName = \"ReCAPTCHA\";\nReCAPTCHA.defaultProps = {\n  onChange: function onChange() {},\n  theme: \"light\",\n  type: \"image\",\n  tabindex: 0,\n  size: \"normal\",\n  badge: \"bottomright\"\n};","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\nimport { Component, createElement, forwardRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport hoistStatics from \"hoist-non-react-statics\";\nvar SCRIPT_MAP = {}; // A counter used to generate a unique id for each component that uses the function\n\nvar idCount = 0;\nexport default function makeAsyncScript(getScriptURL, options) {\n  options = options || {};\n  return function wrapWithAsyncScript(WrappedComponent) {\n    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || \"Component\";\n    var AsyncScriptLoader = /*#__PURE__*/\n    function (_Component) {\n      _inheritsLoose(AsyncScriptLoader, _Component);\n      function AsyncScriptLoader(props, context) {\n        var _this;\n        _this = _Component.call(this, props, context) || this;\n        _this.state = {};\n        _this.__scriptURL = \"\";\n        return _this;\n      }\n      var _proto = AsyncScriptLoader.prototype;\n      _proto.asyncScriptLoaderGetScriptLoaderID = function asyncScriptLoaderGetScriptLoaderID() {\n        if (!this.__scriptLoaderID) {\n          this.__scriptLoaderID = \"async-script-loader-\" + idCount++;\n        }\n        return this.__scriptLoaderID;\n      };\n      _proto.setupScriptURL = function setupScriptURL() {\n        this.__scriptURL = typeof getScriptURL === \"function\" ? getScriptURL() : getScriptURL;\n        return this.__scriptURL;\n      };\n      _proto.asyncScriptLoaderHandleLoad = function asyncScriptLoaderHandleLoad(state) {\n        var _this2 = this;\n\n        // use reacts setState callback to fire props.asyncScriptOnLoad with new state/entry\n        this.setState(state, function () {\n          return _this2.props.asyncScriptOnLoad && _this2.props.asyncScriptOnLoad(_this2.state);\n        });\n      };\n      _proto.asyncScriptLoaderTriggerOnScriptLoaded = function asyncScriptLoaderTriggerOnScriptLoaded() {\n        var mapEntry = SCRIPT_MAP[this.__scriptURL];\n        if (!mapEntry || !mapEntry.loaded) {\n          throw new Error(\"Script is not loaded.\");\n        }\n        for (var obsKey in mapEntry.observers) {\n          mapEntry.observers[obsKey](mapEntry);\n        }\n        delete window[options.callbackName];\n      };\n      _proto.componentDidMount = function componentDidMount() {\n        var _this3 = this;\n        var scriptURL = this.setupScriptURL();\n        var key = this.asyncScriptLoaderGetScriptLoaderID();\n        var _options = options,\n          globalName = _options.globalName,\n          callbackName = _options.callbackName,\n          scriptId = _options.scriptId; // check if global object already attached to window\n\n        if (globalName && typeof window[globalName] !== \"undefined\") {\n          SCRIPT_MAP[scriptURL] = {\n            loaded: true,\n            observers: {}\n          };\n        } // check if script loading already\n\n        if (SCRIPT_MAP[scriptURL]) {\n          var entry = SCRIPT_MAP[scriptURL]; // if loaded or errored then \"finish\"\n\n          if (entry && (entry.loaded || entry.errored)) {\n            this.asyncScriptLoaderHandleLoad(entry);\n            return;\n          } // if still loading then callback to observer queue\n\n          entry.observers[key] = function (entry) {\n            return _this3.asyncScriptLoaderHandleLoad(entry);\n          };\n          return;\n        }\n        /*\n         * hasn't started loading\n         * start the \"magic\"\n         * setup script to load and observers\n         */\n\n        var observers = {};\n        observers[key] = function (entry) {\n          return _this3.asyncScriptLoaderHandleLoad(entry);\n        };\n        SCRIPT_MAP[scriptURL] = {\n          loaded: false,\n          observers: observers\n        };\n        var script = document.createElement(\"script\");\n        script.src = scriptURL;\n        script.async = true;\n        for (var attribute in options.attributes) {\n          script.setAttribute(attribute, options.attributes[attribute]);\n        }\n        if (scriptId) {\n          script.id = scriptId;\n        }\n        var callObserverFuncAndRemoveObserver = function callObserverFuncAndRemoveObserver(func) {\n          if (SCRIPT_MAP[scriptURL]) {\n            var mapEntry = SCRIPT_MAP[scriptURL];\n            var observersMap = mapEntry.observers;\n            for (var obsKey in observersMap) {\n              if (func(observersMap[obsKey])) {\n                delete observersMap[obsKey];\n              }\n            }\n          }\n        };\n        if (callbackName && typeof window !== \"undefined\") {\n          window[callbackName] = function () {\n            return _this3.asyncScriptLoaderTriggerOnScriptLoaded();\n          };\n        }\n        script.onload = function () {\n          var mapEntry = SCRIPT_MAP[scriptURL];\n          if (mapEntry) {\n            mapEntry.loaded = true;\n            callObserverFuncAndRemoveObserver(function (observer) {\n              if (callbackName) {\n                return false;\n              }\n              observer(mapEntry);\n              return true;\n            });\n          }\n        };\n        script.onerror = function () {\n          var mapEntry = SCRIPT_MAP[scriptURL];\n          if (mapEntry) {\n            mapEntry.errored = true;\n            callObserverFuncAndRemoveObserver(function (observer) {\n              observer(mapEntry);\n              return true;\n            });\n          }\n        };\n        document.body.appendChild(script);\n      };\n      _proto.componentWillUnmount = function componentWillUnmount() {\n        // Remove tag script\n        var scriptURL = this.__scriptURL;\n        if (options.removeOnUnmount === true) {\n          var allScripts = document.getElementsByTagName(\"script\");\n          for (var i = 0; i < allScripts.length; i += 1) {\n            if (allScripts[i].src.indexOf(scriptURL) > -1) {\n              if (allScripts[i].parentNode) {\n                allScripts[i].parentNode.removeChild(allScripts[i]);\n              }\n            }\n          }\n        } // Clean the observer entry\n\n        var mapEntry = SCRIPT_MAP[scriptURL];\n        if (mapEntry) {\n          delete mapEntry.observers[this.asyncScriptLoaderGetScriptLoaderID()];\n          if (options.removeOnUnmount === true) {\n            delete SCRIPT_MAP[scriptURL];\n          }\n        }\n      };\n      _proto.render = function render() {\n        var globalName = options.globalName; // remove asyncScriptOnLoad from childProps\n\n        var _this$props = this.props,\n          asyncScriptOnLoad = _this$props.asyncScriptOnLoad,\n          forwardedRef = _this$props.forwardedRef,\n          childProps = _objectWithoutPropertiesLoose(_this$props, [\"asyncScriptOnLoad\", \"forwardedRef\"]); // eslint-disable-line no-unused-vars\n\n        if (globalName && typeof window !== \"undefined\") {\n          childProps[globalName] = typeof window[globalName] !== \"undefined\" ? window[globalName] : undefined;\n        }\n        childProps.ref = forwardedRef;\n        return createElement(WrappedComponent, childProps);\n      };\n      return AsyncScriptLoader;\n    }(Component); // Note the second param \"ref\" provided by React.forwardRef.\n    // We can pass it along to AsyncScriptLoader as a regular prop, e.g. \"forwardedRef\"\n    // And it can then be attached to the Component.\n\n    var ForwardedComponent = forwardRef(function (props, ref) {\n      return createElement(AsyncScriptLoader, _extends({}, props, {\n        forwardedRef: ref\n      }));\n    });\n    ForwardedComponent.displayName = \"AsyncScriptLoader(\" + wrappedComponentName + \")\";\n    ForwardedComponent.propTypes = {\n      asyncScriptOnLoad: PropTypes.func\n    };\n    return hoistStatics(ForwardedComponent, WrappedComponent);\n  };\n}","import ReCAPTCHA from \"./recaptcha\";\nimport makeAsyncScriptLoader from \"react-async-script\";\nvar callbackName = \"onloadcallback\";\nvar globalName = \"grecaptcha\";\nfunction getOptions() {\n  return typeof window !== \"undefined\" && window.recaptchaOptions || {};\n}\nfunction getURL() {\n  var dynamicOptions = getOptions();\n  var hostname = dynamicOptions.useRecaptchaNet ? \"recaptcha.net\" : \"www.google.com\";\n  return \"https://\" + hostname + \"/recaptcha/api.js?onload=\" + callbackName + \"&render=explicit\";\n}\nexport default makeAsyncScriptLoader(getURL, {\n  callbackName: callbackName,\n  globalName: globalName\n})(ReCAPTCHA);","import React from 'react';\nimport GoogleRecaptcha from 'react-google-recaptcha';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nvar _excluded = [\"children\"];\nvar NetlifyFormContext = React.createContext();\nNetlifyFormContext.displayName = 'NetlifyFormContext';\nvar NetlifyFormProvider = function NetlifyFormProvider(_ref) {\n  var children = _ref.children,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(NetlifyFormContext.Provider, {\n    value: _extends({}, props)\n  }, children);\n};\nfunction useNetlifyFormContext() {\n  return React.useContext(NetlifyFormContext);\n}\nvar _excluded$1 = [\"label\"];\nvar Honeypot = function Honeypot(_ref) {\n  var _ref$label = _ref.label,\n    label = _ref$label === void 0 ? \"Leave the following field empty:\" : _ref$label,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded$1);\n  var _useNetlifyFormContex = useNetlifyFormContext(),\n    handleChange = _useNetlifyFormContex.handleChange,\n    honeypotName = _useNetlifyFormContex.honeypotName;\n  return /*#__PURE__*/React.createElement(\"p\", {\n    hidden: true\n  }, /*#__PURE__*/React.createElement(\"label\", null, label, ' ', /*#__PURE__*/React.createElement(\"input\", _extends({\n    type: \"text\"\n  }, props, {\n    name: honeypotName,\n    onChange: handleChange\n  }))));\n};\nvar encodeFormData = function encodeFormData(data) {\n  var formData = new FormData();\n  for (var _i = 0, _Object$keys = Object.keys(data); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    formData.append(key, data[key]);\n  }\n  return formData;\n};\nvar isFunction = function isFunction(x) {\n  return typeof x === 'function';\n};\nvar isEmptyChildren = function isEmptyChildren(x) {\n  return React.Children.count(x) === 0;\n};\nfunction NetlifyFormReducer(state, action) {\n  var type = action.type,\n    payload = action.payload;\n  switch (type) {\n    case 'CHANGE_FORM_DATA':\n      {\n        var _extends2;\n        var name = payload.name,\n          value = payload.value,\n          _type = payload.type;\n        return _extends({}, state, {\n          values: _extends({}, state.values, (_extends2 = {}, _extends2[name] = _type !== 'checkbox' ? value : payload.checked, _extends2))\n        });\n      }\n    case 'RESET_FORM':\n      {\n        var initialData = payload;\n        return _extends({}, state, {\n          values: initialData\n        });\n      }\n    case 'SET_SUCCESS':\n      return _extends({}, state, {\n        success: true,\n        error: false,\n        submitting: false,\n        submitted: true\n      });\n    case 'SET_ERROR':\n      return _extends({}, state, {\n        success: false,\n        error: true,\n        submitting: false\n      });\n    case 'SET_SUBMITTING':\n      return _extends({}, state, {\n        submitting: true\n      });\n    case 'SET_HONEYPOT_NAME':\n      return _extends({}, state, {\n        honeypotName: payload\n      });\n    case 'ENABLE_RECAPTCHA':\n      return _extends({}, state, {\n        recaptchaEnabled: payload\n      });\n    default:\n      throw new Error(\"Action type \\\"\" + type + \"\\\" is not defined.\");\n  }\n}\nvar _excluded$2 = [\"children\"];\nvar NetlifyFormComponent = function NetlifyFormComponent(_ref) {\n  var children = _ref.children,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded$2);\n  var context = useNetlifyFormContext();\n  var formRef = context.formRef,\n    formName = context.formName,\n    formAction = context.formAction,\n    honeypotName = context.honeypotName,\n    recaptchaEnabled = context.recaptchaEnabled,\n    handleSubmit = context.handleSubmit,\n    handleReset = context.handleReset;\n  var netlifyProps = {};\n  if (honeypotName) {\n    netlifyProps['data-netlify-honeypot'] = honeypotName;\n  }\n  if (recaptchaEnabled) {\n    netlifyProps['data-netlify-recaptcha'] = true;\n  }\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: formRef,\n    method: \"post\",\n    name: formName,\n    action: formAction,\n    onSubmit: handleSubmit,\n    onReset: handleReset,\n    \"data-netlify\": true\n  }, netlifyProps, props), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"hidden\",\n    name: \"form-name\",\n    value: formName\n  }), children ? isFunction(children) ? children(context) : !isEmptyChildren(children) ? children : null : null);\n};\nvar _excluded$3 = [\"children\", \"formProps\"];\nvar useNetlifyForm = function useNetlifyForm(_ref) {\n  var _ref$name = _ref.name,\n    name = _ref$name === void 0 ? 'Form' : _ref$name,\n    _ref$action = _ref.action,\n    action = _ref$action === void 0 ? '' : _ref$action,\n    _ref$honeypotName = _ref.honeypotName,\n    honeypotName = _ref$honeypotName === void 0 ? '' : _ref$honeypotName,\n    _ref$enableRecaptcha = _ref.enableRecaptcha,\n    enableRecaptcha = _ref$enableRecaptcha === void 0 ? false : _ref$enableRecaptcha,\n    _ref$onSuccess = _ref.onSuccess,\n    onSuccess = _ref$onSuccess === void 0 ? function () {} : _ref$onSuccess,\n    _ref$onFailure = _ref.onFailure,\n    onFailure = _ref$onFailure === void 0 ? function () {} : _ref$onFailure;\n  var initialValues = {};\n  var initialState = {\n    success: false,\n    error: false,\n    submitting: false,\n    submitted: false,\n    response: null,\n    values: initialValues,\n    formName: name,\n    formAction: action,\n    honeypotName: honeypotName,\n    recaptchaEnabled: enableRecaptcha,\n    recaptchaInvisible: false\n  };\n  var _React$useReducer = React.useReducer(NetlifyFormReducer, initialState),\n    state = _React$useReducer[0],\n    dispatch = _React$useReducer[1];\n  var formRef = React.useRef(null);\n  var recaptchaRef = React.useRef(null);\n  var handleChange = function handleChange(_ref2) {\n    var _ref2$target = _ref2.target,\n      name = _ref2$target.name,\n      value = _ref2$target.value,\n      files = _ref2$target.files;\n    dispatch({\n      type: 'CHANGE_FORM_DATA',\n      payload: files != null && files.length > 0 ? {\n        name: name,\n        value: files[0]\n      } : {\n        name: name,\n        value: value\n      }\n    });\n  };\n  var handleReset = function handleReset() {\n    dispatch({\n      type: 'RESET_FORM',\n      payload: initialValues\n    });\n  };\n  var handleSubmit = function handleSubmit(event, values) {\n    if (event === void 0) {\n      event = null;\n    }\n    if (values === void 0) {\n      values = {};\n    }\n    try {\n      var _temp4 = function _temp4(_result) {\n        if (_exit2) return _result;\n        dispatch({\n          type: 'SET_SUBMITTING'\n        });\n        return Promise.resolve(fetch('/', {\n          method: 'POST',\n          body: encodeFormData(formData)\n        })).then(function (response) {\n          var context = {\n            state: state,\n            formRef: formRef,\n            recaptchaRef: recaptchaRef\n          };\n          if (response.status !== 200) {\n            dispatch({\n              type: 'SET_ERROR'\n            });\n            return onFailure(response, context);\n          }\n          dispatch({\n            type: 'SET_SUCCESS'\n          });\n          return onSuccess(response, context);\n        });\n      };\n      var _exit2 = false;\n      if (event) {\n        event.preventDefault();\n      }\n      var formData = _extends({\n        'form-name': state.formName\n      }, values, state.values);\n      var _temp5 = function () {\n        if (state.recaptchaEnabled) {\n          var _temp6 = function _temp6(recaptchaValue) {\n            formData['g-recaptcha-response'] = recaptchaValue;\n          };\n          if (recaptchaRef.current === null) {\n            throw new Error('reCAPTCHA is enabled but reference not found, make sure you render the reCAPTCHA-component somewhere.');\n          }\n          var isRecaptchaInvisible = recaptchaRef.current.props.size === 'invisible';\n          return isRecaptchaInvisible ? Promise.resolve(recaptchaRef.current.executeAsync()).then(_temp6) : _temp6(recaptchaRef.current.getValue());\n        }\n      }();\n      return Promise.resolve(_temp5 && _temp5.then ? _temp5.then(_temp4) : _temp4(_temp5));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  var setHoneypotName = React.useCallback(function (ref) {\n    return dispatch({\n      type: 'SET_HONEYPOT_NAME',\n      payload: ref\n    });\n  }, []);\n  var enableRecaptchaHandler = React.useCallback(function (enable) {\n    return dispatch({\n      type: 'ENABLE_RECAPTCHA',\n      payload: enable\n    });\n  }, []);\n  return _extends({}, state, {\n    handleChange: handleChange,\n    handleSubmit: handleSubmit,\n    handleReset: handleReset,\n    setHoneypotName: setHoneypotName,\n    enableRecaptcha: enableRecaptchaHandler,\n    formRef: formRef,\n    recaptchaRef: recaptchaRef\n  });\n};\nvar NetlifyForm = function NetlifyForm(_ref3) {\n  var children = _ref3.children,\n    formProps = _ref3.formProps,\n    props = _objectWithoutPropertiesLoose(_ref3, _excluded$3);\n  var context = useNetlifyForm(props);\n  return /*#__PURE__*/React.createElement(NetlifyFormProvider, context, /*#__PURE__*/React.createElement(NetlifyFormComponent, formProps, children));\n};\nvar _excluded$4 = [\"siteKey\", \"invisible\"];\nvar Recaptcha = function Recaptcha(_ref) {\n  var _ref$siteKey = _ref.siteKey,\n    siteKey = _ref$siteKey === void 0 ? '' : _ref$siteKey,\n    _ref$invisible = _ref.invisible,\n    invisible = _ref$invisible === void 0 ? false : _ref$invisible,\n    passThroughProps = _objectWithoutPropertiesLoose(_ref, _excluded$4);\n  var _useNetlifyFormContex = useNetlifyFormContext(),\n    recaptchaRef = _useNetlifyFormContex.recaptchaRef;\n  return /*#__PURE__*/React.createElement(GoogleRecaptcha, _extends({}, passThroughProps, {\n    sitekey: siteKey,\n    ref: recaptchaRef\n  }, invisible ? {\n    size: 'invisible'\n  } : {}));\n};\nexport { Honeypot, NetlifyForm, NetlifyFormComponent, NetlifyFormContext, NetlifyFormProvider, Recaptcha, useNetlifyForm, useNetlifyFormContext };","import React from \"react\";\r\nimport Layout from \"../components/layout\";\r\nimport { graphql } from \"gatsby\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  useNetlifyForm,\r\n  NetlifyFormProvider,\r\n  NetlifyFormComponent,\r\n  Honeypot,\r\n} from \"react-netlify-forms\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst ContactTemplate = ({ data }) => {\r\n  const { html, frontmatter } = data.markdownRemark;\r\n\r\n  return (\r\n    <Layout title={frontmatter.title}>\r\n      <ContactWrapper>\r\n        <ContactCopy dangerouslySetInnerHTML={{ __html: html }} />\r\n        <ContactForm />\r\n      </ContactWrapper>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default ContactTemplate;\r\n\r\nconst ContactForm = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n  const netlify = useNetlifyForm({\r\n    name: \"Contact\",\r\n    action: \"/thanks\",\r\n    honeypotName: \"bot-field\",\r\n  });\r\n  const onSubmit = (data) => {\r\n    netlify.handleSubmit(null, data);\r\n  };\r\n\r\n  return (\r\n    <FormWrapper>\r\n      <NetlifyFormProvider {...netlify}>\r\n        <NetlifyFormComponent onSubmit={handleSubmit(onSubmit)}>\r\n          <Honeypot />\r\n\r\n          <FormGroup>\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input\r\n              id=\"name\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n              {...register(\"name\", { required: \"Name is required\" })}\r\n            />\r\n            <div css={{ height: \"1rem\" }}>\r\n              {errors.name && (\r\n                <FormErrorMessage>{errors.name.message}</FormErrorMessage>\r\n              )}\r\n            </div>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              id=\"email\"\r\n              name=\"email\"\r\n              type=\"text\"\r\n              {...register(\"email\", {\r\n                required: \"Email is required.\",\r\n                pattern: {\r\n                  message: \"Email is not valid.\",\r\n                  value: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/,\r\n                },\r\n              })}\r\n            />\r\n            <div css={{ height: \"1rem\" }}>\r\n              {errors.email && (\r\n                <FormErrorMessage>{errors.email.message}</FormErrorMessage>\r\n              )}\r\n            </div>\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <label htmlFor=\"message\">Your message</label>\r\n            <textarea\r\n              id=\"message\"\r\n              name=\"message\"\r\n              rows=\"4\"\r\n              {...register(\"message\", { required: \"Message is required\" })}\r\n            />\r\n            <div css={{ height: \"1rem\" }}>\r\n              {errors.message && (\r\n                <FormErrorMessage>{errors.message.message}</FormErrorMessage>\r\n              )}\r\n            </div>\r\n          </FormGroup>\r\n\r\n          <FormFeedbackWrapper>\r\n            {netlify.success && (\r\n              <FormSuccessFeedback>\r\n                Message sent successfully\r\n              </FormSuccessFeedback>\r\n            )}\r\n            {netlify.error && (\r\n              <FormErrorFeedback>\r\n                Something went wrong, please try again.\r\n              </FormErrorFeedback>\r\n            )}\r\n          </FormFeedbackWrapper>\r\n\r\n          <FormButton type=\"submit\">Send Message</FormButton>\r\n        </NetlifyFormComponent>\r\n      </NetlifyFormProvider>\r\n    </FormWrapper>\r\n  );\r\n};\r\n\r\nconst ContactWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 100%;\r\n  justify-content: space-around;\r\n  margin-top: 1rem;\r\n  padding-bottom: 1rem;\r\n\r\n  & > * {\r\n    flex: 1;\r\n  }\r\n\r\n  @media screen and (max-width: 1000px) {\r\n    & {\r\n      flex-direction: column;\r\n      justify-content: flex-start;\r\n    }\r\n\r\n    & > * {\r\n      margin-top: 2rem;\r\n      flex: 0;\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ContactCopy = styled.div`\r\n  max-width: 45ch;\r\n\r\n  & p {\r\n    font-size: var(--size-400);\r\n  }\r\n\r\n  & a {\r\n    color: #f43f5e;\r\n  }\r\n`;\r\n\r\nconst FormWrapper = styled.div`\r\n  max-width: 45ch;\r\n  padding: 1rem;\r\n  padding-top: 0;\r\n  border-radius: 4px;\r\n  border: 1px solid rgba(255, 255, 255, 0.7);\r\n  background-color: rgba(255, 255, 255, 0.5);\r\n  backdrop-filter: blur(10px);\r\n\r\n  body.dark-mode & {\r\n    background-color: #3b3b3c;\r\n    border: 1px solid #515151;\r\n  }\r\n`;\r\n\r\nconst FormGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-family: inherit;\r\n\r\n  & label {\r\n    margin-top: 1rem;\r\n    text-transform: capitalize;\r\n    font-size: var(--size-400);\r\n  }\r\n\r\n  & input,\r\n  textarea {\r\n    resize: vertical;\r\n    font-size: var(--size-400);\r\n    font-family: inherit;\r\n    padding: 0.25rem 0.5rem;\r\n    border-radius: 4px;\r\n    background-color: #fecdd3;\r\n    border: 1px solid #fda4af;\r\n  }\r\n\r\n  body.dark-mode & input,\r\n  body.dark-mode & textarea {\r\n    background-color: #4f4f50;\r\n    border: 1px solid #89898a;\r\n  }\r\n\r\n  & textarea:focus,\r\n  input:focus {\r\n    outline: none;\r\n    border: 1px solid #665b5c;\r\n  }\r\n`;\r\n\r\nconst FormErrorMessage = styled.span`\r\n  color: red;\r\n  font-size: var(--size-300);\r\n  opacity: 0.7;\r\n`;\r\n\r\nconst FormFeedbackWrapper = styled.div`\r\n  margin-top: 1rem;\r\n  text-transform: uppercase;\r\n  font-size: var(--size-300);\r\n`;\r\n\r\nconst FormSuccessFeedback = styled.span`\r\n  color: green;\r\n`;\r\n\r\nconst FormErrorFeedback = styled.span`\r\n  color: red;\r\n`;\r\n\r\nconst FormButton = styled.button`\r\n  margin-top: 1rem;\r\n  padding: 0.45rem;\r\n  padding-left: 1.25rem;\r\n  padding-right: 1.5rem;\r\n  background-color: #f43f5e;\r\n  color: #fafafa;\r\n  border: none;\r\n  text-transform: uppercase;\r\n  border-radius: 4px;\r\n`;\r\n\r\nexport const pageQuery = graphql`\r\n  query($slug: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      frontmatter {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["isCheckBoxInput","element","type","isDateObject","value","Date","isNullOrUndefined","isObjectType","isObject","Array","isArray","getEventValue","event","target","checked","isNameInFieldArray","names","name","has","substring","search","getNodeParentName","isPlainObject","tempObject","prototypeCopy","constructor","prototype","hasOwnProperty","isWeb","window","HTMLElement","document","cloneObject","data","copy","Set","Blob","FileList","key","compact","filter","Boolean","isUndefined","val","undefined","get","obj","path","defaultValue","result","split","reduce","EVENTS","BLUR","FOCUS_OUT","CHANGE","VALIDATION_MODE","onBlur","onChange","onSubmit","onTouched","all","INPUT_VALIDATION_RULES","getProxyFormState","formState","control","localProxyFormState","isRoot","arguments","length","defaultValues","_defaultValues","Object","defineProperty","_key","_proxyFormState","isEmptyObject","keys","shouldRenderFormState","formStateData","updateFormState","find","convertToArrayPayload","useSubscribe","props","_props","current","subscription","disabled","subject","subscribe","next","unsubscribe","isString","generateWatchOutput","_names","formValues","isGlobal","watch","add","map","fieldName","watchAll","isKey","test","stringToPath","input","replace","set","object","index","tempPath","lastIndex","newValue","objValue","isNaN","appendErrors","validateAllFieldCriteria","errors","message","types","focusFieldBy","fields","callback","fieldsNames","field","_f","currentField","ref","focus","refs","getValidationModes","mode","isOnSubmit","isOnBlur","isOnChange","isOnAll","isOnTouch","isWatched","isBlurEvent","some","watchName","startsWith","slice","updateFieldArrayRootError","error","fieldArrayErrors","isBoolean","isFileInput","isFunction","isHTMLElement","owner","ownerDocument","defaultView","isMessage","isRadioInput","isRegex","RegExp","defaultResult","isValid","validResult","getCheckboxValue","options","values","option","attributes","defaultReturn","getRadioValue","previous","getValidateError","every","getValueAndMessage","validationData","validateField","async","shouldUseNativeValidation","isFieldArray","required","maxLength","minLength","min","max","pattern","validate","valueAsNumber","mount","inputValue","inputRef","setCustomValidity","reportValidity","isRadio","isCheckBox","isRadioOrCheckbox","isEmpty","appendErrorsCurry","bind","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","exceedMin","maxOutput","minOutput","valueDate","valueAsDate","convertTimeToDate","time","toDateString","isTime","isWeek","valueNumber","maxLengthOutput","minLengthOutput","patternValue","match","validateError","validationResult","unset","paths","childObject","updatePath","baseGet","isEmptyArray","createSubject","_observers","observers","observer","push","o","isPrimitive","deepEqual","object1","object2","getTime","keys1","keys2","val1","includes","val2","isMultipleSelect","live","isConnected","objectHasFunction","markFieldsDirty","isParentNodeArray","getDirtyFieldsFromDefaultValues","dirtyFieldsFromValues","getDirtyFields","getFieldValueAs","_ref2","setValueAs","NaN","getFieldValue","files","selectedOptions","_ref3","getResolverOptions","_fields","criteriaMode","getRuleValue","rule","source","hasValidation","schemaErrorLookup","join","foundError","pop","skipValidation","isTouched","isSubmitted","reValidateMode","unsetEmptyArray","defaultOptions","shouldFocusError","createFormControl","delayErrorCallback","flushRootRender","_options","_formState","submitCount","isDirty","isLoading","isValidating","isSubmitting","isSubmitSuccessful","touchedFields","dirtyFields","_formValues","shouldUnregister","_state","action","unMount","array","timer","_subjects","state","shouldCaptureDirtyFields","resetOptions","keepDirtyValues","validationModeBeforeSubmit","validationModeAfterSubmit","shouldDisplayAllAssociatedErrors","_updateValid","shouldUpdateValid","resolver","_executeSchema","executeBuiltInValidation","_updateIsValidating","updateValidAndValue","shouldSkipSetValueAs","defaultChecked","setFieldValue","updateTouchAndDirty","fieldValue","shouldDirty","shouldRender","shouldUpdateField","isPreviousDirty","output","_getDirty","isCurrentFieldPristine","isPreviousFieldTouched","shouldRenderByError","fieldState","previousFieldError","delayError","updateErrors","wait","clearTimeout","setTimeout","updatedFormState","context","shouldOnlyCheckValid","valid","isFieldArrayRoot","fieldError","getValues","_getWatch","fieldReference","forEach","optionRef","selected","checkboxRef","radioRef","shouldTouch","shouldValidate","trigger","setValues","fieldKey","concat","setValue","cloneValue","isFieldValueUpdated","shouldSkipValidation","deps","watched","previousErrorLookupResult","errorLookupResult","fieldNames","executeSchemaAndUpdateState","Promise","shouldFocus","getFieldState","invalid","setError","unregister","delete","keepValue","keepError","keepDirty","keepTouched","keepDefaultValue","keepIsValid","register","disabledIsDefined","progressive","fieldRef","querySelectorAll","radioOrCheckbox","_focusError","handleSubmit","onValid","onInvalid","e","preventDefault","persist","fieldValues","_reset","keepStateOptions","updatedValues","cloneUpdatedValues","keepDefaultValues","keepValues","form","closest","reset","keepSubmitCount","keepIsSubmitted","keepErrors","_removeUnmounted","_updateFieldArray","method","args","shouldSetValues","shouldUpdateFieldsAndState","argA","argB","_getFieldArray","_resetDefaultValues","then","_updateFormState","payload","resetField","clearErrors","inputName","setFocus","shouldSelect","select","_extends","assign","i","call","apply","this","_assertThisInitialized","self","ReferenceError","ReCAPTCHA","_React$Component","subClass","superClass","_this","handleExpired","handleErrored","handleChange","handleRecaptchaRef","create","__proto__","_proto","getValue","grecaptcha","_widgetId","getResponse","getWidgetId","execute","_executeRequested","executeAsync","_this2","resolve","reject","executionResolve","executionReject","onExpired","onErrored","token","explicitRender","render","wrapper","createElement","sitekey","theme","tabindex","size","stoken","hl","badge","captcha","appendChild","componentDidMount","componentDidUpdate","componentWillUnmount","delayOfCaptchaIframeRemoving","temporaryNode","body","style","display","firstChild","removeChild","elem","_this$props","childProps","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","displayName","defaultProps","SCRIPT_MAP","idCount","callbackName","getScriptURL","recaptchaOptions","useRecaptchaNet","globalName","WrappedComponent","wrappedComponentName","AsyncScriptLoader","_Component","__scriptURL","asyncScriptLoaderGetScriptLoaderID","__scriptLoaderID","setupScriptURL","asyncScriptLoaderHandleLoad","setState","asyncScriptOnLoad","asyncScriptLoaderTriggerOnScriptLoaded","mapEntry","loaded","Error","obsKey","_this3","scriptURL","scriptId","entry","errored","script","attribute","src","setAttribute","id","callObserverFuncAndRemoveObserver","func","observersMap","onload","onerror","removeOnUnmount","allScripts","getElementsByTagName","parentNode","forwardedRef","Component","ForwardedComponent","forwardRef","propTypes","_excluded","NetlifyFormContext","NetlifyFormProvider","_ref","children","Provider","useNetlifyFormContext","_excluded$1","Honeypot","_ref$label","label","_useNetlifyFormContex","honeypotName","hidden","encodeFormData","formData","FormData","_i","_Object$keys","append","NetlifyFormReducer","_extends2","_type","success","submitting","submitted","recaptchaEnabled","_excluded$2","NetlifyFormComponent","formRef","formName","formAction","handleReset","netlifyProps","onReset","x","count","isEmptyChildren","useNetlifyForm","_ref$name","_ref$action","_ref$honeypotName","_ref$enableRecaptcha","enableRecaptcha","_ref$onSuccess","onSuccess","_ref$onFailure","onFailure","initialValues","initialState","response","recaptchaInvisible","_React$useReducer","dispatch","recaptchaRef","setHoneypotName","enableRecaptchaHandler","enable","_ref2$target","_temp4","_result","_exit2","fetch","status","_temp5","_temp6","recaptchaValue","html","frontmatter","markdownRemark","React","Layout","title","ContactWrapper","ContactCopy","dangerouslySetInnerHTML","__html","ContactForm","_formControl","useForm","netlify","FormWrapper","FormGroup","htmlFor","_StyledDiv","FormErrorMessage","_StyledDiv2","email","rows","_StyledDiv3","FormFeedbackWrapper","FormSuccessFeedback","FormErrorFeedback","FormButton","styled","div","withConfig","componentId","span","button","height"],"sourceRoot":""}